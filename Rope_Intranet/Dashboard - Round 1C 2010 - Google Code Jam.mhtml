From: <Saved by Blink>
Subject: Dashboard - Round 1C 2010 - Google Code Jam
Date: Wed, 28 Feb 2017 05:29:32 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----"

------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: text/html
Content-ID: <frame-5-5d8a7a9d-5856-4464-8c96-6e9dd43f3d03@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://code.google.com/codejam/contest/619102/dashboard#s=p0

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><head><meta http-equiv=
=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"><meta http-equiv=
=3D"refresh" content=3D"172795">
 =20
  <title>
    Dashboard - Round 1C 2010 - Google Code Jam
  </title>
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://code.google.co=
m/codejam/contest/css/35/base.css">
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://code.google.co=
m/codejam/contest/css/35/dashboard.css">
 =20
  <style type=3D"text/css"></style>
 =20
 =20
</head>

<body onload=3D"GCJ.main()">

<div id=3D"logo-div">
  <a href=3D"https://code.google.com/codejam/">
    <img src=3D"https://code.google.com/codejam/contest/static/logo_image3.=
gif" id=3D"logo" alt=3D"Google Code Jam">
  </a>
</div>

<div>

<div id=3D"dsb-page-body">

<div id=3D"left-panel">
  <div class=3D"v-divider"></div>
  <div class=3D"v-divider"></div>
  <div class=3D"v-divider"></div>
  <!-- Problem Selection Panel -->
  <div id=3D"dsb-contest-title">Round 1C 2010</div>
  <hr class=3D"dsb-hr">
  <div id=3D"dsb-problem-selection-area">
    <div id=3D"dsb-problem-selection-list" class=3D"after-start-only" style=
=3D"display: block;">
    <div><div id=3D"dsb-problem-tab0" class=3D"dsb-problem-tab-open" tabind=
ex=3D"0" role=3D"button">  <div id=3D"dsb-problem-title0" class=3D"dynamic-=
link">A. Rope Intranet  </div></div></div><div><div id=3D"dsb-problem-tab1"=
 class=3D"dsb-problem-tab-close" tabindex=3D"0" role=3D"button">  <div id=
=3D"dsb-problem-title1" class=3D"dynamic-link">B. Load Testing  </div></div=
></div><div><div id=3D"dsb-problem-tab2" class=3D"dsb-problem-tab-close" ta=
bindex=3D"0" role=3D"button">  <div id=3D"dsb-problem-title2" class=3D"dyna=
mic-link">C. Making Chess Boards  </div></div></div></div>
    <div id=3D"dsb-problem-selection-list-pre-contest" class=3D"dsb-pre-con=
test-text before-start-only" style=3D"display: none;">
      The list of problems will appear here after the contest loads.
     =20
    </div>
  </div>
  <hr class=3D"dsb-hr">
  <div class=3D"v-divider"></div>
  <div class=3D"v-divider"></div>
  <div id=3D"dsb-analysis-button" class=3D"dsb-analysis-tab-close" tabindex=
=3D"0" role=3D"button" style=3D"display: block;">
    <div class=3D"dynamic-link">
       <div id=3D"dsb-analysis-tab">
         Contest Analysis
       </div>
    </div>
  </div>
  <div id=3D"dsb-ask-question-area">
    <div id=3D"dsb-ask-question-button" class=3D"dsb-clar-tab-close" tabind=
ex=3D"0" role=3D"button" style=3D"display: block;">
      <div class=3D"dynamic-link">
        <div id=3D"dsb-ask-question-tab" class=3D"">Questions asked</div>
      </div>
    </div>
    <div class=3D"dsb-pre-contest-text before-start-only" style=3D"display:=
 none;">
      You'll be able to ask questions about the problems, and view your
      submissions, here.
     =20
    </div>
  </div>
  <div id=3D"dsb-submissions-button" class=3D"dsb-submissions-tab-close" ta=
bindex=3D"0" role=3D"button" style=3D"display: none;">
    <div class=3D"dynamic-link">
      <div id=3D"dsb-submissions-tab">
        View my submissions
      </div>
    </div>
  </div>
  <div class=3D"v-divider"></div>
  <div class=3D"v-divider"></div>
  <div class=3D"dsb-mini-tab-wrapper">
  <div id=3D"dsb-status-div-container">
    <div id=3D"dsb-status-header-div" onmouseover=3D"this.style.cursor=3D'p=
ointer'" onclick=3D"GCJ.toggleStatusPanelVisibility();" style=3D"cursor: po=
inter;">
      <img id=3D"dsb-status-panel-button" src=3D"https://code.google.com/co=
dejam/contest/static/minus.gif">
      &nbsp; Submissions
    </div>
    <div id=3D"dsb-status-tab" class=3D"after-start-only" style=3D"display:=
 block;">
      <div id=3D"dsb-status-tab-loading-text" class=3D"dsb-pre-contest-text=
" style=3D"display: none;">
        Loading...
      </div>
    <div id=3D"dsb-status-tab-problems" style=3D"display: block;"><div><div=
 id=3D"dsb-problem-status-wrapper0" class=3D"problem-status-wrapper">  <div=
 class=3D"dsb-status-problem-title">Rope Intranet</div><div><table class=3D=
"problemStatus">  <tbody>    <tr class=3D"inputSetStatus">      <td id=3D"i=
nputName0_0" class=3D"inputName">9pt</td>      <td class=3D"status">       =
 <div id=3D"selfStat0_0" class=3D"dsb-mini-status-non-highlight">Not attemp=
ted</div>        <div id=3D"globalStat0_0" class=3D"globalStat" style=3D"di=
splay: block;"><b>2989/3075 users</b> correct (97%)</div>      </td>    </t=
r>  </tbody></table></div><div><table class=3D"problemStatus">  <tbody>    =
<tr class=3D"inputSetStatus">      <td id=3D"inputName0_1" class=3D"inputNa=
me">13pt</td>      <td class=3D"status">        <div id=3D"selfStat0_1" cla=
ss=3D"dsb-mini-status-non-highlight">Not attempted</div>        <div id=3D"=
globalStat0_1" class=3D"globalStat" style=3D"display: block;"><b>2662/2973 =
users</b> correct (90%)</div>      </td>    </tr>  </tbody></table></div></=
div></div><div><div id=3D"dsb-problem-status-wrapper1" class=3D"problem-sta=
tus-wrapper">  <div class=3D"dsb-status-problem-title">Load Testing</div><d=
iv><table class=3D"problemStatus">  <tbody>    <tr class=3D"inputSetStatus"=
>      <td id=3D"inputName1_0" class=3D"inputName">14pt</td>      <td class=
=3D"status">        <div id=3D"selfStat1_0" class=3D"dsb-mini-status-non-hi=
ghlight">Not attempted</div>        <div id=3D"globalStat1_0" class=3D"glob=
alStat" style=3D"display: block;"><b>1060/1468 users</b> correct (72%)</div=
>      </td>    </tr>  </tbody></table></div><div><table class=3D"problemSt=
atus">  <tbody>    <tr class=3D"inputSetStatus">      <td id=3D"inputName1_=
1" class=3D"inputName">22pt</td>      <td class=3D"status">        <div id=
=3D"selfStat1_1" class=3D"dsb-mini-status-non-highlight">Not attempted</div=
>        <div id=3D"globalStat1_1" class=3D"globalStat" style=3D"display: b=
lock;"><b>829/1020 users</b> correct (81%)</div>      </td>    </tr>  </tbo=
dy></table></div></div></div><div><div id=3D"dsb-problem-status-wrapper2" c=
lass=3D"problem-status-wrapper">  <div class=3D"dsb-status-problem-title">M=
aking Chess Boards</div><div><table class=3D"problemStatus">  <tbody>    <t=
r class=3D"inputSetStatus">      <td id=3D"inputName2_0" class=3D"inputName=
">18pt</td>      <td class=3D"status">        <div id=3D"selfStat2_0" class=
=3D"dsb-mini-status-non-highlight">Not attempted</div>        <div id=3D"gl=
obalStat2_0" class=3D"globalStat" style=3D"display: block;"><b>640/836 user=
s</b> correct (77%)</div>      </td>    </tr>  </tbody></table></div><div><=
table class=3D"problemStatus">  <tbody>    <tr class=3D"inputSetStatus">   =
   <td id=3D"inputName2_1" class=3D"inputName">24pt</td>      <td class=3D"=
status">        <div id=3D"selfStat2_1" class=3D"dsb-mini-status-non-highli=
ght">Not attempted</div>        <div id=3D"globalStat2_1" class=3D"globalSt=
at" style=3D"display: block;"><b>226/547 users</b> correct (41%)</div>     =
 </td>    </tr>  </tbody></table></div></div></div></div></div>
    <div id=3D"dsb-status-tab-pre-contest" class=3D"dsb-pre-contest-text be=
fore-start-only" style=3D"display: none;">
      Statistics about the problems will appear here.  They'll include your
      status on each problem, and other contestants' attempts.
     =20
    </div>
  </div>
  </div>
  <div class=3D"v-divider"></div>
  <div class=3D"v-divider"></div>
  <!-- Mini Scoreboard -->
  <div class=3D"dsb-mini-tab-wrapper">
    <div id=3D"dsb-scoreboard-div">
      <div id=3D"dsb-scoreboard-header-div" onmouseover=3D"this.style.curso=
r=3D'pointer'" onclick=3D"GCJ.toggleVisibility(
              'dsb-scoreboard-table',
              'dsb-scoreboard-panel-button',
              '/codejam/contest/static/minus.gif',
              '/codejam/contest/static/plus.gif')">
          <img id=3D"dsb-scoreboard-panel-button" src=3D"https://code.googl=
e.com/codejam/contest/static/minus.gif">
          &nbsp; Top Scores
      </div>
      <div id=3D"dsb-scoreboard-table-wrap" class=3D"after-start-only" styl=
e=3D"display: block;"><table id=3D"dsb-scoreboard-table"><tbody><tr class=
=3D"dsb-scoreboard-row-even" id=3D"sbRow_0" style=3D"display: block;"><td c=
lass=3D"dsb-name-td" id=3D"sbName_0">ZhukovDmitry</td><td class=3D"dsb-scor=
e-td" id=3D"sbScore_0">100</td></tr><tr class=3D"dsb-scoreboard-row-odd" id=
=3D"sbRow_1" style=3D"display: block;"><td class=3D"dsb-name-td" id=3D"sbNa=
me_1">darnley</td><td class=3D"dsb-score-td" id=3D"sbScore_1">100</td></tr>=
<tr class=3D"dsb-scoreboard-row-even" id=3D"sbRow_2" style=3D"display: bloc=
k;"><td class=3D"dsb-name-td" id=3D"sbName_2">morriship</td><td class=3D"ds=
b-score-td" id=3D"sbScore_2">100</td></tr><tr class=3D"dsb-scoreboard-row-o=
dd" id=3D"sbRow_3" style=3D"display: block;"><td class=3D"dsb-name-td" id=
=3D"sbName_3">xdliutao</td><td class=3D"dsb-score-td" id=3D"sbScore_3">100<=
/td></tr><tr class=3D"dsb-scoreboard-row-even" id=3D"sbRow_4" style=3D"disp=
lay: block;"><td class=3D"dsb-name-td" id=3D"sbName_4">Onufry</td><td class=
=3D"dsb-score-td" id=3D"sbScore_4">100</td></tr><tr class=3D"dsb-scoreboard=
-row-odd" id=3D"sbRow_5" style=3D"display: block;"><td class=3D"dsb-name-td=
" id=3D"sbName_5">Clann</td><td class=3D"dsb-score-td" id=3D"sbScore_5">100=
</td></tr><tr class=3D"dsb-scoreboard-row-even" id=3D"sbRow_6" style=3D"dis=
play: block;"><td class=3D"dsb-name-td" id=3D"sbName_6">SergeyFedorov</td><=
td class=3D"dsb-score-td" id=3D"sbScore_6">100</td></tr><tr class=3D"dsb-sc=
oreboard-row-odd" id=3D"sbRow_7" style=3D"display: block;"><td class=3D"dsb=
-name-td" id=3D"sbName_7">kubus</td><td class=3D"dsb-score-td" id=3D"sbScor=
e_7">100</td></tr><tr class=3D"dsb-scoreboard-row-even" id=3D"sbRow_8" styl=
e=3D"display: block;"><td class=3D"dsb-name-td" id=3D"sbName_8">K.A.D.R</td=
><td class=3D"dsb-score-td" id=3D"sbScore_8">100</td></tr><tr class=3D"dsb-=
scoreboard-row-odd" id=3D"sbRow_9" style=3D"display: block;"><td class=3D"d=
sb-name-td" id=3D"sbName_9">Murphy</td><td class=3D"dsb-score-td" id=3D"sbS=
core_9">100</td></tr></tbody></table></div>
      <div id=3D"dsb-scoreboard-tab-pre-contest" class=3D"dsb-pre-contest-t=
ext before-start-only" style=3D"display: none;">
        The scores of the top 10 contestants will appear here, with a link =
to
        the contest's scoreboard.
       =20
      </div>
      <div class=3D"dsb-mini-tab-link">
      </div>
    </div>
  </div>
</div>

<div id=3D"right-panel">
  <div id=3D"dsb-status-msg-wrapper" class=3D"dsb-status-msg-wrapper" role=
=3D"alert" style=3D"visibility: hidden;">
    <div id=3D"dsb-status-msg" class=3D"dsb-status-msg">
      <span id=3D"dsb-status-msg-text">Judged response for input A-large: <=
font color=3D"green"><b>Correct!</b></font></span>
      <span id=3D"dsb-view-sub-link" style=3D"display: none;">View submissi=
ons.</span>
    </div>
  </div>

  <div id=3D"dsb-contest-title-bar">
    <div id=3D"dsb-rank-etc">
      <span id=3D"dsb-time-remaining">Practice Mode</span>
      <span class=3D"after-start-only-inline" style=3D"display: inline;">
        <span id=3D"dsb-current-rank-div" style=3D"display: none;">
          Rank: <span id=3D"dsb-current-rank-span">--</span>
        </span>
        <span id=3D"dsb-current-score-div" style=3D"display: none;">
          Score: <span id=3D"dsb-current-score-span">--</span>
        </span>
      </span>
    </div>
    <div id=3D"dsb-title-links"><b>S.E.</b> | <a target=3D"new" href=3D"htt=
ps://code.google.com/codejam/contest/619102/scoreboard?c=3D619102">Contest =
scoreboard</a> | <a href=3D"https://code.google.com/_ah/logout?continue=3Dh=
ttps://www.google.com/accounts/Logout%3Fcontinue%3Dhttps://appengine.google=
.com/_ah/logout%253Fcontinue%253Dhttps://code.google.com/codejam/contest%26=
service%3Dah">Sign out</a></div>
  </div>
  <!-- Problem Statement -->
  <div id=3D"main-panel-border" class=3D"dsb-blue-border">
  <div id=3D"dsb-border-inner">
   <!-- Problem Title -->
    <h3 id=3D"dsb-problem-title-area">
      <span id=3D"dsb-problem-title-div-pre-contest" class=3D"problem-title=
 before-start-only" style=3D"display: none;">
        <span style=3D"color:#666">Problem.</span>
        The problem's name goes here.
      </span>
      <span id=3D"dsb-problem-title-div" class=3D"problem-title after-start=
-only" style=3D"display: block;"><span style=3D"color:#666">Problem A.</spa=
n> Rope Intranet</span>
    </h3>

    <div class=3D"dsb-content-pages before-start-only" style=3D"display: no=
ne;">
      We're now waiting for the contest to start.  Once the contest starts,
      the problems will automatically load, and Problem A will display here=
.
      You don't have to solve that problem first; you will be able to selec=
t
      another problem from the list to the left.  Once you've solved one
      problem, don't forget to work on the others!
     =20
    </div>

    <div id=3D"dsb-problem-pages"><div id=3D"dsb-problem-page0" class=3D"ds=
b-content-pages" style=3D"display: block;"><!-- Problem Input File Selectio=
n --><div class=3D"dsb-input-panel-text" id=3D"dsb-input-panel-text0"><span=
 style=3D"color: #666666;">This contest is open for practice.  You can try =
every problem as many times as you like, though we won't keep track of whic=
h problems you solve.  Read the <a href=3D"https://code.google.com/codejam/=
quickstart.html" target=3D"_blank">Quick-Start Guide</a> to get started.</s=
pan></div><table><tbody id=3D"dsb-input-form-table0"><tr><td class=3D"dsb-i=
nput-table-description">Small input<br>9 points</td><td class=3D"dsb-input-=
table-linktd"><div id=3D"dsb-action-box-wrap0-0" class=3D""><div id=3D"dsb-=
input-wrapper0-0" class=3D"dsb-input-wrapper" style=3D"display: inline;"><b=
utton class=3D"dsb-input-start-button" id=3D"dsb-input-start-button0-0" sty=
le=3D"display: inline;">Solve A-small</button><span class=3D"dsb-input-link=
-span" id=3D"dsb-input-link-plain0-0" style=3D"display: none;"><img class=
=3D"dsb-input-link-img" src=3D"https://code.google.com/codejam/contest/stat=
ic/file.gif"><span class=3D"dsb-input-link-text" id=3D"dsb-input-link-plain=
-text0-0">Download A-small-practice.in</span></span></div><span class=3D"ds=
b-input-table-caption" id=3D"dsb-input-table-caption0-0" style=3D"display: =
block;">Judge's response for last submission: Correct.</span><span class=3D=
"dsb-input-table-caption" id=3D"dsb-resubmit-caption0-0" style=3D"display: =
none;">Your submission was received. You can still <span class=3D"dsb-input=
-link-text" id=3D"dsb-resubmit-link0-0">resubmit</span> for <span id=3D"dsb=
-resubmit-timer0-0"></span>.<br>Only your last submission counts. <span cla=
ss=3D"dsb-input-link-text" id=3D"dsb-resubmit-view-sub-link0-0">View your l=
ast submission</span>.</span><div><div class=3D"dsb-submit-form-div" id=3D"=
dsb-submit-form-div0-0" style=3D"display: none;"><div style=3D"display:none=
"><b>Time Remaining:</b> <span id=3D"io_timer_0"></span>&nbsp;&nbsp;</div><=
div style=3D"display:none"><b>Input:</b> A-small-practice.in.</div><form id=
=3D"submit-formio_timer_0" action=3D"https://code.google.com/codejam/contes=
t/619102/dashboard/do" enctype=3D"multipart/form-data" method=3D"post"><inp=
ut type=3D"hidden" name=3D"csrfmiddlewaretoken" value=3D"MmE0YzkzZWFiYTFiZj=
ExOTQ3YTk5NDk4NjVlMjMzOWV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0ODgyMTY4NDkxNzM5N=
zA=3D"><div class=3D"dsb-submit-form-separator">your output file:<input id=
=3D"output-fileio_timer_0" type=3D"file" name=3D"answer" class=3D"submitFor=
mFile"></div><div style=3D"display: none"><table class=3D"dsb-source-code-t=
able"><tbody><tr><td style=3D"padding:0.4em 0.2em 0 0">source code:&nbsp;&n=
bsp;</td><td><div id=3D"source-filesio_timer_0"><div id=3D"input-file-divio=
_timer_0-0"><span id=3D"source-fileio_timer_0-0"><input type=3D"file" name=
=3D"source-file0" class=3D"submitFormFile"></span><span id=3D"remove-source=
-fileio_timer_0-0" class=3D"dsb-submit-form-links" style=3D"visibility: hid=
den;">remove</span></div></div><span id=3D"add-source-fileio_timer_0" class=
=3D"dsb-submit-form-links">Add another file</span></td></tr></tbody></table=
></div><div class=3D"dsb-submit-form-separator" style=3D"color:gray">source=
 file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div c=
lass=3D"dsb-submit-form-separator" style=3D"text-align:center"><input id=3D=
"submit-buttonio_timer_0" type=3D"button" value=3D"Submit file">&nbsp;&nbsp=
;<input id=3D"dsb-hide-submissionio_timer_0" type=3D"button" value=3D"Hide"=
></div><div id=3D"source-file-namesio_timer_0"></div><input type=3D"hidden"=
 name=3D"cmd" value=3D"SubmitAnswer"><input type=3D"hidden" name=3D"problem=
" value=3D"599117"><input type=3D"hidden" name=3D"input_id" value=3D"0"><in=
put type=3D"hidden" name=3D"num_source_files" id=3D"num-source-filesio_time=
r_0" value=3D"1"><input type=3D"hidden" name=3D"agent" value=3D"website"></=
form></div></div></div></td></tr><tr><td class=3D"dsb-input-table-descripti=
on">Large input<br>13 points</td><td class=3D"dsb-input-table-linktd"><div =
id=3D"dsb-action-box-wrap0-1" class=3D""><div id=3D"dsb-input-wrapper0-1" c=
lass=3D"dsb-input-wrapper" style=3D"display: inline;"><button class=3D"dsb-=
input-start-button" id=3D"dsb-input-start-button0-1" style=3D"display: inli=
ne;">Solve A-large</button><span class=3D"dsb-input-link-span" id=3D"dsb-in=
put-link-plain0-1" style=3D"display: none;"><img class=3D"dsb-input-link-im=
g" src=3D"https://code.google.com/codejam/contest/static/file.gif"><span cl=
ass=3D"dsb-input-link-text" id=3D"dsb-input-link-plain-text0-1">Download A-=
large-practice.in</span></span></div><span class=3D"dsb-input-table-caption=
" id=3D"dsb-input-table-caption0-1" style=3D"display: block;">Judge's respo=
nse for last submission: Correct.</span><span class=3D"dsb-input-table-capt=
ion" id=3D"dsb-resubmit-caption0-1" style=3D"display: none;">Your submissio=
n was received. You can still <span class=3D"dsb-input-link-text" id=3D"dsb=
-resubmit-link0-1">resubmit</span> for <span id=3D"dsb-resubmit-timer0-1"><=
/span>.<br>Only your last submission counts. <span class=3D"dsb-input-link-=
text" id=3D"dsb-resubmit-view-sub-link0-1">View your last submission</span>=
.</span><div><div class=3D"dsb-submit-form-div" id=3D"dsb-submit-form-div0-=
1" style=3D"display: none;"><div style=3D"display:none"><b>Time Remaining:<=
/b> <span id=3D"io_timer_1"></span>&nbsp;&nbsp;</div><div style=3D"display:=
none">You may resubmit this multiple times within the remaining time-frame.=
 Only your last submission will count.</div><form id=3D"submit-formio_timer=
_1" action=3D"https://code.google.com/codejam/contest/619102/dashboard/do" =
enctype=3D"multipart/form-data" method=3D"post"><input type=3D"hidden" name=
=3D"csrfmiddlewaretoken" value=3D"MmE0YzkzZWFiYTFiZjExOTQ3YTk5NDk4NjVlMjMzO=
WV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0ODgyMTY4NDkxNzM5NzA=3D"><div class=3D"ds=
b-submit-form-separator">your output file:<input id=3D"output-fileio_timer_=
1" type=3D"file" name=3D"answer" class=3D"submitFormFile"></div><div style=
=3D"display: none"><table class=3D"dsb-source-code-table"><tbody><tr><td st=
yle=3D"padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id=3D=
"source-filesio_timer_1"><div id=3D"input-file-divio_timer_1-0"><span id=3D=
"source-fileio_timer_1-0"><input type=3D"file" name=3D"source-file0" class=
=3D"submitFormFile"></span><span id=3D"remove-source-fileio_timer_1-0" clas=
s=3D"dsb-submit-form-links" style=3D"visibility: hidden;">remove</span></di=
v></div><span id=3D"add-source-fileio_timer_1" class=3D"dsb-submit-form-lin=
ks">Add another file</span></td></tr></tbody></table></div><div class=3D"ds=
b-submit-form-separator" style=3D"color:gray">source file(s): &nbsp;&nbsp;&=
nbsp;not needed for the practice contest</div><div class=3D"dsb-submit-form=
-separator" style=3D"text-align:center"><input id=3D"submit-buttonio_timer_=
1" type=3D"button" value=3D"Submit file">&nbsp;&nbsp;<input id=3D"dsb-hide-=
submissionio_timer_1" type=3D"button" value=3D"Hide"></div><div id=3D"sourc=
e-file-namesio_timer_1"></div><input type=3D"hidden" name=3D"cmd" value=3D"=
SubmitAnswer"><input type=3D"hidden" name=3D"problem" value=3D"599117"><inp=
ut type=3D"hidden" name=3D"input_id" value=3D"1"><input type=3D"hidden" nam=
e=3D"num_source_files" id=3D"num-source-filesio_timer_1" value=3D"1"><input=
 type=3D"hidden" name=3D"agent" value=3D"website"></form></div></div></div>=
</td></tr></tbody></table><!-- Problem Statement --><div id=3D"dsb-problem-=
content-div0" class=3D"dsb-problem-content-div" style=3D"width: 40em;"><h3>=
Problem</h3>
<p>
A company is located in two very tall buildings. The company intranet conne=
cting the buildings consists of many wires, each connecting a window on the=
 first building to a window on the second building.</p>
<p>You are looking at those buildings from the side, so that one of the bui=
ldings is to the left and one is to the right. The windows on the left buil=
ding are seen as points on its right wall, and the windows on the right bui=
lding are seen as points on its left wall. Wires are straight segments conn=
ecting a window on the left building to a window on the right building.</p>
<p><img src=3D"https://code.google.com/codejam/contest/images/?image=3DRope=
Intranet.png&amp;p=3D599117&amp;c=3D619102"></p>
<p>You've noticed that no two wires share an endpoint (in other words, ther=
e's at most one wire going out of each window). However, from your viewpoin=
t, some of the wires intersect midway. You've also noticed that exactly two=
 wires meet at each intersection point.</p>
<p>On the above picture, the intersection points are the black circles, whi=
le the windows are the white circles.</p>
<p>How many intersection points do you see?</p>

<h3>Input</h3>
<p>
The first line of the input gives the number of test cases, <b>T</b>. <b>T<=
/b> test cases follow. Each case begins with a line containing an integer <=
b>N</b>, denoting the number of wires you see.
</p>

<p>
The next <b>N</b> lines each describe one wire with two integers <b>A<sub>i=
</sub></b> and <b>B<sub>i</sub></b>. These describe the windows that this w=
ire connects: <b>A<sub>i</sub></b> is the height of the window on the left =
building, and <b>B<sub>i</sub></b> is the height of the window on the right=
 building.
</p>

<h3>Output</h3>
<p>
For each test case, output one line containing "Case #x: y", where x is the=
 case number (starting from 1) and y is the number of intersection points y=
ou see.
</p>

<h3>Limits</h3>
<p>
1 =E2=89=A4 <b>T</b> =E2=89=A4 15.<br>
1 =E2=89=A4 <b>A<sub>i</sub></b> =E2=89=A4 10<sup>4</sup>.<br>
1 =E2=89=A4 <b>B<sub>i</sub></b> =E2=89=A4 10<sup>4</sup>.<br>
Within each test case, all <b>A<sub>i</sub></b> are different.<br>
Within each test case, all <b>B<sub>i</sub></b> are different.<br>
No three wires intersect at the same point.
</p>

<h4>Small dataset</h4>
<p>
1 =E2=89=A4 <b>N</b> =E2=89=A4 2.
</p>

<h4>Large dataset</h4>
<p>
1 =E2=89=A4 <b>N</b> =E2=89=A4 1000.
</p>

<h3>Sample</h3>
<div class=3D"problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class=3D"io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class=3D"io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<code>
2<br>
3<br>
1 10<br>
5 5<br>
7 7<br>
2<br>
1 1<br>
2 2<br>
</code>
</td>
<td>
<code>
Case #1: 2<br>
Case #2: 0<br>
<br>
</code>
</td></tr></tbody></table>
</div>
</div></div><div id=3D"dsb-problem-page1" class=3D"dsb-content-pages" style=
=3D"display: none;"><!-- Problem Input File Selection --><div class=3D"dsb-=
input-panel-text" id=3D"dsb-input-panel-text1"><span style=3D"color: #66666=
6;">This contest is open for practice.  You can try every problem as many t=
imes as you like, though we won't keep track of which problems you solve.  =
Read the <a href=3D"https://code.google.com/codejam/quickstart.html" target=
=3D"_blank">Quick-Start Guide</a> to get started.</span></div><table><tbody=
 id=3D"dsb-input-form-table1"><tr><td class=3D"dsb-input-table-description"=
>Small input<br>14 points</td><td class=3D"dsb-input-table-linktd"><div id=
=3D"dsb-action-box-wrap1-0" class=3D""><div id=3D"dsb-input-wrapper1-0" cla=
ss=3D"dsb-input-wrapper" style=3D"display: inline;"><button class=3D"dsb-in=
put-start-button" id=3D"dsb-input-start-button1-0" style=3D"display: inline=
;">Solve B-small</button><span class=3D"dsb-input-link-span" id=3D"dsb-inpu=
t-link-plain1-0" style=3D"display: none;"><img class=3D"dsb-input-link-img"=
 src=3D"https://code.google.com/codejam/contest/static/file.gif"><span clas=
s=3D"dsb-input-link-text" id=3D"dsb-input-link-plain-text1-0">Download B-sm=
all-practice.in</span></span></div><span class=3D"dsb-input-table-caption" =
id=3D"dsb-input-table-caption1-0" style=3D"display: none;"></span><span cla=
ss=3D"dsb-input-table-caption" id=3D"dsb-resubmit-caption1-0" style=3D"disp=
lay: none;">Your submission was received. You can still <span class=3D"dsb-=
input-link-text" id=3D"dsb-resubmit-link1-0">resubmit</span> for <span id=
=3D"dsb-resubmit-timer1-0"></span>.<br>Only your last submission counts. <s=
pan class=3D"dsb-input-link-text" id=3D"dsb-resubmit-view-sub-link1-0">View=
 your last submission</span>.</span><div><div class=3D"dsb-submit-form-div"=
 id=3D"dsb-submit-form-div1-0" style=3D"display: none;"><div style=3D"displ=
ay:none"><b>Time Remaining:</b> <span id=3D"io_timer_2"></span>&nbsp;&nbsp;=
</div><div style=3D"display:none"><b>Input:</b> B-small-practice.in.</div><=
form id=3D"submit-formio_timer_2" action=3D"https://code.google.com/codejam=
/contest/619102/dashboard/do" enctype=3D"multipart/form-data" method=3D"pos=
t"><input type=3D"hidden" name=3D"csrfmiddlewaretoken" value=3D"MmE0YzkzZWF=
iYTFiZjExOTQ3YTk5NDk4NjVlMjMzOWV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0ODgyMTY4ND=
kxNzM5NzA=3D"><div class=3D"dsb-submit-form-separator">your output file:<in=
put id=3D"output-fileio_timer_2" type=3D"file" name=3D"answer" class=3D"sub=
mitFormFile"></div><div style=3D"display: none"><table class=3D"dsb-source-=
code-table"><tbody><tr><td style=3D"padding:0.4em 0.2em 0 0">source code:&n=
bsp;&nbsp;</td><td><div id=3D"source-filesio_timer_2"><div id=3D"input-file=
-divio_timer_2-0"><span id=3D"source-fileio_timer_2-0"><input type=3D"file"=
 name=3D"source-file0" class=3D"submitFormFile"></span><span id=3D"remove-s=
ource-fileio_timer_2-0" class=3D"dsb-submit-form-links" style=3D"visibility=
: hidden;">remove</span></div></div><span id=3D"add-source-fileio_timer_2" =
class=3D"dsb-submit-form-links">Add another file</span></td></tr></tbody></=
table></div><div class=3D"dsb-submit-form-separator" style=3D"color:gray">s=
ource file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><=
div class=3D"dsb-submit-form-separator" style=3D"text-align:center"><input =
id=3D"submit-buttonio_timer_2" type=3D"button" value=3D"Submit file">&nbsp;=
&nbsp;<input id=3D"dsb-hide-submissionio_timer_2" type=3D"button" value=3D"=
Hide"></div><div id=3D"source-file-namesio_timer_2"></div><input type=3D"hi=
dden" name=3D"cmd" value=3D"SubmitAnswer"><input type=3D"hidden" name=3D"pr=
oblem" value=3D"551112"><input type=3D"hidden" name=3D"input_id" value=3D"0=
"><input type=3D"hidden" name=3D"num_source_files" id=3D"num-source-filesio=
_timer_2" value=3D"1"><input type=3D"hidden" name=3D"agent" value=3D"websit=
e"></form></div></div></div></td></tr><tr><td class=3D"dsb-input-table-desc=
ription">Large input<br>22 points</td><td class=3D"dsb-input-table-linktd">=
<div id=3D"dsb-action-box-wrap1-1" class=3D""><div id=3D"dsb-input-wrapper1=
-1" class=3D"dsb-input-wrapper" style=3D"display: inline;"><button class=3D=
"dsb-input-start-button" id=3D"dsb-input-start-button1-1" style=3D"display:=
 inline;">Solve B-large</button><span class=3D"dsb-input-link-span" id=3D"d=
sb-input-link-plain1-1" style=3D"display: none;"><img class=3D"dsb-input-li=
nk-img" src=3D"https://code.google.com/codejam/contest/static/file.gif"><sp=
an class=3D"dsb-input-link-text" id=3D"dsb-input-link-plain-text1-1">Downlo=
ad B-large-practice.in</span></span></div><span class=3D"dsb-input-table-ca=
ption" id=3D"dsb-input-table-caption1-1" style=3D"display: none;"></span><s=
pan class=3D"dsb-input-table-caption" id=3D"dsb-resubmit-caption1-1" style=
=3D"display: none;">Your submission was received. You can still <span class=
=3D"dsb-input-link-text" id=3D"dsb-resubmit-link1-1">resubmit</span> for <s=
pan id=3D"dsb-resubmit-timer1-1"></span>.<br>Only your last submission coun=
ts. <span class=3D"dsb-input-link-text" id=3D"dsb-resubmit-view-sub-link1-1=
">View your last submission</span>.</span><div><div class=3D"dsb-submit-for=
m-div" id=3D"dsb-submit-form-div1-1" style=3D"display: none;"><div style=3D=
"display:none"><b>Time Remaining:</b> <span id=3D"io_timer_3"></span>&nbsp;=
&nbsp;</div><div style=3D"display:none">You may resubmit this multiple time=
s within the remaining time-frame. Only your last submission will count.</d=
iv><form id=3D"submit-formio_timer_3" action=3D"https://code.google.com/cod=
ejam/contest/619102/dashboard/do" enctype=3D"multipart/form-data" method=3D=
"post"><input type=3D"hidden" name=3D"csrfmiddlewaretoken" value=3D"MmE0Yzk=
zZWFiYTFiZjExOTQ3YTk5NDk4NjVlMjMzOWV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0ODgyMT=
Y4NDkxNzM5NzA=3D"><div class=3D"dsb-submit-form-separator">your output file=
:<input id=3D"output-fileio_timer_3" type=3D"file" name=3D"answer" class=3D=
"submitFormFile"></div><div style=3D"display: none"><table class=3D"dsb-sou=
rce-code-table"><tbody><tr><td style=3D"padding:0.4em 0.2em 0 0">source cod=
e:&nbsp;&nbsp;</td><td><div id=3D"source-filesio_timer_3"><div id=3D"input-=
file-divio_timer_3-0"><span id=3D"source-fileio_timer_3-0"><input type=3D"f=
ile" name=3D"source-file0" class=3D"submitFormFile"></span><span id=3D"remo=
ve-source-fileio_timer_3-0" class=3D"dsb-submit-form-links" style=3D"visibi=
lity: hidden;">remove</span></div></div><span id=3D"add-source-fileio_timer=
_3" class=3D"dsb-submit-form-links">Add another file</span></td></tr></tbod=
y></table></div><div class=3D"dsb-submit-form-separator" style=3D"color:gra=
y">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</d=
iv><div class=3D"dsb-submit-form-separator" style=3D"text-align:center"><in=
put id=3D"submit-buttonio_timer_3" type=3D"button" value=3D"Submit file">&n=
bsp;&nbsp;<input id=3D"dsb-hide-submissionio_timer_3" type=3D"button" value=
=3D"Hide"></div><div id=3D"source-file-namesio_timer_3"></div><input type=
=3D"hidden" name=3D"cmd" value=3D"SubmitAnswer"><input type=3D"hidden" name=
=3D"problem" value=3D"551112"><input type=3D"hidden" name=3D"input_id" valu=
e=3D"1"><input type=3D"hidden" name=3D"num_source_files" id=3D"num-source-f=
ilesio_timer_3" value=3D"1"><input type=3D"hidden" name=3D"agent" value=3D"=
website"></form></div></div></div></td></tr></tbody></table><!-- Problem St=
atement --><div id=3D"dsb-problem-content-div1" class=3D"dsb-problem-conten=
t-div" style=3D"width: 40em;"><h3>Problem</h3>
<p>
Now that you have won Code Jam and been hired by Google as a software engin=
eer, you have been assigned to work on their wildly popular programming con=
test website. =20
</p>
<p>
Google is expecting a lot of participants (<b>P</b>) in Code Jam next year,=
 and they want to make sure that the site can support that many people at t=
he same time.  During Code Jam 2010 you learned that the site could support=
 at least <b>L</b> people at a time without any errors, but you also know t=
hat the site can't yet support <b>P</b> people.
</p>
<p>
To determine how many more machines you'll need, you want to know within a =
factor of <b>C</b> how many people the site can support.  This means that t=
here is an integer <b>a</b> such that you know the site can support <b>a</b=
> people, but you know the site can't support <b>a</b> * <b>C</b> people.
</p>
<p>
You can run a series of <i>load tests</i>, each of which will determine whe=
ther the site can support at least <b>X</b> people for some integer value o=
f <b>X</b> that you choose.  If you pick an optimal strategy, choosing what=
 tests to run based on the results of previous tests, how many load tests d=
o you need in the worst case?
</p>

<h3>Input</h3>
<p>
The first line of the input gives the number of test cases, <b>T</b>.  <b>T=
</b> lines follow, each of which contains space-separated integers <b>L</b>=
, <b>P</b> and <b>C</b> in that order.
</p>

<h3>Output</h3>
<p>
For each test case, output one line containing "Case #x: y", where x is the=
 case number (starting from 1) and y is the number of load tests you need t=
o run in the worst case before knowing within a factor of <b>C</b> how many=
 people the site can support.
</p>

<h3>Limits</h3>
<p>
1 =E2=89=A4 <b>T</b> =E2=89=A4 1000.<br>
2 =E2=89=A4 <b>C</b> =E2=89=A4 10.<br>
<b>L</b>, <b>P</b> and <b>C</b> are all integers.
</p>

<h4>Small dataset</h4>
<p>
1 =E2=89=A4 <b>L</b> &lt; <b>P</b> =E2=89=A4 10<sup>3</sup>.
</p>

<h4>Large dataset</h4>
<p>
1 =E2=89=A4 <b>L</b> &lt; <b>P</b> =E2=89=A4 10<sup>9</sup>.
</p>

<h3>Sample</h3>
<div class=3D"problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class=3D"io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class=3D"io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<code>
4<br>
50 700 2<br>
19 57 3<br>
1 1000 2<br>
24 97 2<br>
</code>
</td>
<td>
<code>
Case #1: 2<br>
Case #2: 0<br>
Case #3: 4<br>
Case #4: 2<br>
<br>
</code>
</td></tr></tbody></table>
</div>

<h4>Explanation</h4>
<p>
In Case #2, we already know that the site can support between 19 and 57 peo=
ple.  Since those are a factor of 3 apart, we don't need to do any testing.
</p>
<p>
In Case #4, we can test 48; but if the site can support 48 people, we need =
more testing, because 48*2 &lt; 97.  We could test 49; but if the site can'=
t support 49 people, we need more testing, because 24 * 2 &lt; 49.  So we n=
eed two tests.
</p> </div></div><div id=3D"dsb-problem-page2" class=3D"dsb-content-pages" =
style=3D"display: none;"><!-- Problem Input File Selection --><div class=3D=
"dsb-input-panel-text" id=3D"dsb-input-panel-text2"><span style=3D"color: #=
666666;">This contest is open for practice.  You can try every problem as m=
any times as you like, though we won't keep track of which problems you sol=
ve.  Read the <a href=3D"https://code.google.com/codejam/quickstart.html" t=
arget=3D"_blank">Quick-Start Guide</a> to get started.</span></div><table><=
tbody id=3D"dsb-input-form-table2"><tr><td class=3D"dsb-input-table-descrip=
tion">Small input<br>18 points</td><td class=3D"dsb-input-table-linktd"><di=
v id=3D"dsb-action-box-wrap2-0" class=3D""><div id=3D"dsb-input-wrapper2-0"=
 class=3D"dsb-input-wrapper" style=3D"display: inline;"><button class=3D"ds=
b-input-start-button" id=3D"dsb-input-start-button2-0" style=3D"display: in=
line;">Solve C-small</button><span class=3D"dsb-input-link-span" id=3D"dsb-=
input-link-plain2-0" style=3D"display: none;"><img class=3D"dsb-input-link-=
img" src=3D"https://code.google.com/codejam/contest/static/file.gif"><span =
class=3D"dsb-input-link-text" id=3D"dsb-input-link-plain-text2-0">Download =
C-small-practice.in</span></span></div><span class=3D"dsb-input-table-capti=
on" id=3D"dsb-input-table-caption2-0" style=3D"display: none;"></span><span=
 class=3D"dsb-input-table-caption" id=3D"dsb-resubmit-caption2-0" style=3D"=
display: none;">Your submission was received. You can still <span class=3D"=
dsb-input-link-text" id=3D"dsb-resubmit-link2-0">resubmit</span> for <span =
id=3D"dsb-resubmit-timer2-0"></span>.<br>Only your last submission counts. =
<span class=3D"dsb-input-link-text" id=3D"dsb-resubmit-view-sub-link2-0">Vi=
ew your last submission</span>.</span><div><div class=3D"dsb-submit-form-di=
v" id=3D"dsb-submit-form-div2-0" style=3D"display: none;"><div style=3D"dis=
play:none"><b>Time Remaining:</b> <span id=3D"io_timer_4"></span>&nbsp;&nbs=
p;</div><div style=3D"display:none"><b>Input:</b> C-small-practice.in.</div=
><form id=3D"submit-formio_timer_4" action=3D"https://code.google.com/codej=
am/contest/619102/dashboard/do" enctype=3D"multipart/form-data" method=3D"p=
ost"><input type=3D"hidden" name=3D"csrfmiddlewaretoken" value=3D"MmE0YzkzZ=
WFiYTFiZjExOTQ3YTk5NDk4NjVlMjMzOWV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0ODgyMTY4=
NDkxNzM5NzA=3D"><div class=3D"dsb-submit-form-separator">your output file:<=
input id=3D"output-fileio_timer_4" type=3D"file" name=3D"answer" class=3D"s=
ubmitFormFile"></div><div style=3D"display: none"><table class=3D"dsb-sourc=
e-code-table"><tbody><tr><td style=3D"padding:0.4em 0.2em 0 0">source code:=
&nbsp;&nbsp;</td><td><div id=3D"source-filesio_timer_4"><div id=3D"input-fi=
le-divio_timer_4-0"><span id=3D"source-fileio_timer_4-0"><input type=3D"fil=
e" name=3D"source-file0" class=3D"submitFormFile"></span><span id=3D"remove=
-source-fileio_timer_4-0" class=3D"dsb-submit-form-links" style=3D"visibili=
ty: hidden;">remove</span></div></div><span id=3D"add-source-fileio_timer_4=
" class=3D"dsb-submit-form-links">Add another file</span></td></tr></tbody>=
</table></div><div class=3D"dsb-submit-form-separator" style=3D"color:gray"=
>source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div=
><div class=3D"dsb-submit-form-separator" style=3D"text-align:center"><inpu=
t id=3D"submit-buttonio_timer_4" type=3D"button" value=3D"Submit file">&nbs=
p;&nbsp;<input id=3D"dsb-hide-submissionio_timer_4" type=3D"button" value=
=3D"Hide"></div><div id=3D"source-file-namesio_timer_4"></div><input type=
=3D"hidden" name=3D"cmd" value=3D"SubmitAnswer"><input type=3D"hidden" name=
=3D"problem" value=3D"563116"><input type=3D"hidden" name=3D"input_id" valu=
e=3D"0"><input type=3D"hidden" name=3D"num_source_files" id=3D"num-source-f=
ilesio_timer_4" value=3D"1"><input type=3D"hidden" name=3D"agent" value=3D"=
website"></form></div></div></div></td></tr><tr><td class=3D"dsb-input-tabl=
e-description">Large input<br>24 points</td><td class=3D"dsb-input-table-li=
nktd"><div id=3D"dsb-action-box-wrap2-1" class=3D""><div id=3D"dsb-input-wr=
apper2-1" class=3D"dsb-input-wrapper" style=3D"display: inline;"><button cl=
ass=3D"dsb-input-start-button" id=3D"dsb-input-start-button2-1" style=3D"di=
splay: inline;">Solve C-large</button><span class=3D"dsb-input-link-span" i=
d=3D"dsb-input-link-plain2-1" style=3D"display: none;"><img class=3D"dsb-in=
put-link-img" src=3D"https://code.google.com/codejam/contest/static/file.gi=
f"><span class=3D"dsb-input-link-text" id=3D"dsb-input-link-plain-text2-1">=
Download C-large-practice.in</span></span></div><span class=3D"dsb-input-ta=
ble-caption" id=3D"dsb-input-table-caption2-1" style=3D"display: none;"></s=
pan><span class=3D"dsb-input-table-caption" id=3D"dsb-resubmit-caption2-1" =
style=3D"display: none;">Your submission was received. You can still <span =
class=3D"dsb-input-link-text" id=3D"dsb-resubmit-link2-1">resubmit</span> f=
or <span id=3D"dsb-resubmit-timer2-1"></span>.<br>Only your last submission=
 counts. <span class=3D"dsb-input-link-text" id=3D"dsb-resubmit-view-sub-li=
nk2-1">View your last submission</span>.</span><div><div class=3D"dsb-submi=
t-form-div" id=3D"dsb-submit-form-div2-1" style=3D"display: none;"><div sty=
le=3D"display:none"><b>Time Remaining:</b> <span id=3D"io_timer_5"></span>&=
nbsp;&nbsp;</div><div style=3D"display:none">You may resubmit this multiple=
 times within the remaining time-frame. Only your last submission will coun=
t.</div><form id=3D"submit-formio_timer_5" action=3D"https://code.google.co=
m/codejam/contest/619102/dashboard/do" enctype=3D"multipart/form-data" meth=
od=3D"post"><input type=3D"hidden" name=3D"csrfmiddlewaretoken" value=3D"Mm=
E0YzkzZWFiYTFiZjExOTQ3YTk5NDk4NjVlMjMzOWV8MTExMzA2OTI1NTM4ODY2NTA4MjY1fDE0O=
DgyMTY4NDkxNzM5NzA=3D"><div class=3D"dsb-submit-form-separator">your output=
 file:<input id=3D"output-fileio_timer_5" type=3D"file" name=3D"answer" cla=
ss=3D"submitFormFile"></div><div style=3D"display: none"><table class=3D"ds=
b-source-code-table"><tbody><tr><td style=3D"padding:0.4em 0.2em 0 0">sourc=
e code:&nbsp;&nbsp;</td><td><div id=3D"source-filesio_timer_5"><div id=3D"i=
nput-file-divio_timer_5-0"><span id=3D"source-fileio_timer_5-0"><input type=
=3D"file" name=3D"source-file0" class=3D"submitFormFile"></span><span id=3D=
"remove-source-fileio_timer_5-0" class=3D"dsb-submit-form-links" style=3D"v=
isibility: hidden;">remove</span></div></div><span id=3D"add-source-fileio_=
timer_5" class=3D"dsb-submit-form-links">Add another file</span></td></tr><=
/tbody></table></div><div class=3D"dsb-submit-form-separator" style=3D"colo=
r:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice conte=
st</div><div class=3D"dsb-submit-form-separator" style=3D"text-align:center=
"><input id=3D"submit-buttonio_timer_5" type=3D"button" value=3D"Submit fil=
e">&nbsp;&nbsp;<input id=3D"dsb-hide-submissionio_timer_5" type=3D"button" =
value=3D"Hide"></div><div id=3D"source-file-namesio_timer_5"></div><input t=
ype=3D"hidden" name=3D"cmd" value=3D"SubmitAnswer"><input type=3D"hidden" n=
ame=3D"problem" value=3D"563116"><input type=3D"hidden" name=3D"input_id" v=
alue=3D"1"><input type=3D"hidden" name=3D"num_source_files" id=3D"num-sourc=
e-filesio_timer_5" value=3D"1"><input type=3D"hidden" name=3D"agent" value=
=3D"website"></form></div></div></div></td></tr></tbody></table><!-- Proble=
m Statement --><div id=3D"dsb-problem-content-div2" class=3D"dsb-problem-co=
ntent-div" style=3D"width: 40em;"><h3>Problem</h3>
<p>
The chess board industry has fallen on hard times and needs your help. It i=
s a little-known fact that chess boards are made from the bark of the extre=
mely rare Croatian Chess Board tree, (<i>Biggus Mobydiccus</i>). The bark o=
f that tree is stripped and unwrapped into a huge rectangular sheet of ches=
s board material. The rectangle is a grid of black and white squares.
</p>

<p>
Your task is to make as many large square chess boards as possible. A chess=
 board is a piece of the bark that is a square, with sides parallel to the =
sides of the bark rectangle, with cells colored in the pattern of a chess b=
oard (no two cells of the same color can share an edge).
</p>

<p>
Each time you cut out a chess board, you must choose the largest possible c=
hess board left in the sheet.  If there are several such boards, pick the t=
opmost one. If there is still a tie, pick the leftmost one.  Continue cutti=
ng out chess boards until there is no bark left. You may need to go as far =
as cutting out 1-by-1 mini chess boards.
</p>

<p>
Here is an example showing the bark of a Chess Board tree and the first few=
 chess boards that will be cut out of it.
</p>
<img src=3D"https://code.google.com/codejam/contest/images/?image=3Dmcb.png=
&amp;p=3D563116&amp;c=3D619102">

<h3>Input</h3>
<p>
The first line of the input gives the number of test cases, <b>T</b>.  <b>T=
</b> test cases follow.  Each one starts with a line containing the dimensi=
ons of the bark grid, <b>M</b> and <b>N</b>. <b>N</b> will always be a mult=
iple of 4. The next <b>M</b> lines will each contain an (<b>N</b>/4)-charac=
ter hexadecimal integer, representing a row of the bark grid. The binary re=
presentation of these integers will give you a strings of <b>N</b> bits, on=
e for each row. Zeros represent black squares; ones represent white squares=
 of the grid.  The rows are given in the input from top to bottom. In each =
row, the most-significant bit of the hexadecimal integer corresponds to the=
 leftmost cell in that row.
</p>

<h3>Output</h3>
<p>
For each test case, output one line containing "Case #x: <b>K</b>", where x=
 is the case number (starting from 1) and <b>K</b> is the number of differe=
nt chess board sizes that you can cut out by following the procedure descri=
bed above. The next <b>K</b> lines should contain two integers each -- the =
size of the chess board (from largest to smallest) and the number of chess =
boards of that size that you can cut out.
</p>

<h3>Limits</h3>
<p>
1 =E2=89=A4 <b>T</b> =E2=89=A4 100;<br>
<b>N</b> will be divisible by 4;<br>
Each hexadecimal integer will contain exactly <b>N</b>/4 characters.<br>
Only the characters 0-9 and A-F will be used.
</p>

<h4>Small dataset</h4>
<p>
1 =E2=89=A4 <b>M</b> =E2=89=A4 32;<br>
1 =E2=89=A4 <b>N</b> =E2=89=A4 32.
</p>

<h4>Large dataset</h4>
<p>
1 =E2=89=A4 <b>M</b> =E2=89=A4 512;<br>
1 =E2=89=A4 <b>N</b> =E2=89=A4 512;<br>
The input file will be at most 200kB in size.
</p>

<h3>Sample</h3>
<div class=3D"problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class=3D"io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class=3D"io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<code>
4<br>
15 20<br>
55555<br>
FFAAA<br>
2AAD5<br>
D552A<br>
2AAD5<br>
D542A<br>
4AD4D<br>
B52B2<br>
52AAD<br>
AD552<br>
AA52D<br>
AAAAA<br>
5AA55<br>
A55AA<br>
5AA55<br>
4 4<br>
0<br>
0<br>
0<br>
0<br>
4 4<br>
3<br>
3<br>
C<br>
C<br>
4 4<br>
6<br>
9<br>
9<br>
6<br>
</code>
</td>
<td>
<code>
Case #1: 5<br>
6 2<br>
4 3<br>
3 7<br>
2 15<br>
1 57<br>
Case #2: 1<br>
1 16<br>
Case #3: 2<br>
2 1<br>
1 12<br>
Case #4: 1<br>
2 4<br>
<br>
</code>
</td></tr></tbody></table>
</div>

<p>The first example test case represents the image above.</p></div></div><=
/div>

    <div id=3D"dsb-analysis-page" class=3D"dsb-content-pages"><div id=3D"ds=
b-analysis-selections"><span id=3D"dsb-analysis-selection-p3" class=3D"dsb-=
analysis-selected">Overview</span>&nbsp; | &nbsp;<span id=3D"dsb-analysis-s=
election-p0" class=3D"dsb-analysis-not-selected">Problem A</span>&nbsp; | &=
nbsp;<span id=3D"dsb-analysis-selection-p1" class=3D"dsb-analysis-not-selec=
ted">Problem B</span>&nbsp; | &nbsp;<span id=3D"dsb-analysis-selection-p2" =
class=3D"dsb-analysis-not-selected">Problem C</span></div><div id=3D"dsb-pr=
oblem-analysis-div3" class=3D"dsb-problem-content-div"><p>
This last sub-round of round 1 saw the largest number of contestants and th=
e largest amount of controversy. Problem A was about permutations masquerad=
ing as a geometry problem. Problem B was a crazy twist on Binary Search. An=
d Problem C was a combination of parsing, dynamic programming and clever tr=
ickery.
</p>
<p>
<i>Load Testing</i> turned out to be the most unusual problem. We received =
dozens of requests for additional hints and explanations of sample test cas=
es. It was a challenge for the judges to explain the problem as clearly as =
possible while remaining fair to all contestants. If our responses seemed h=
arsh and unhelpful at times, please know that we tried our best to remain a=
s fair as possible. Perhaps the analysis of Problem B can help clear up any=
 remaining confusion.
</p>
<p>
ZhukovDmitry finished all 3 problems in just over 38 minutes, closely follo=
wed by darnley, who was only 22 seconds behind. aytawgf took the third plac=
e in just under one hour of total time.
</p>
<p>
Congratulations to the 3000 contestants who have advanced to Round 2.
</p>

<h3>Cast</h3>
<p>Problem A. <i>Rope Intranet</i> Written by Cosmin Negruseri. Prepared by=
 Petr Mitrichev.</p>
<p>Problem B. <i>Load Testing</i> Written by Bartholomew Furrow. Prepared b=
y Petr Mitrichev and Bartholomew Furrow.</p>
<p>Problem C. <i>Making Chess Boards</i> Written and prepared by Igor Naver=
niouk.</p>
<p>Contest analysis presented by Petr Mitrichev, Igor Naverniouk, and Cosmi=
n Negruseri.</p>
<p>Solutions and other problem preparation provided by David Arthur, Xiaomi=
n Chen, Ante Derek, and John Dethridge.</p>
<p>
And a special thanks to Martin Gardner, whose books have inspired and educa=
ted many of us.
</p>
</div><div id=3D"dsb-problem-analysis-div0" class=3D"dsb-problem-content-di=
v" style=3D"display: none;"><p>
This problem was easier than it could have been, since the constraints don'=
t require you to write an efficient solution. To solve it you can simply it=
erate through each pair of ropes and test if they intersect. Checking for i=
ntersection can be done in various ways. One way is to write the two line e=
quations and then solve a system of linear equations with two variables to =
find the intersection point. An easier solution is to simply check if the o=
rder of the ends of the pair of ropes on the first building is the opposite=
 of the order of the ends of the ropes on the second building. This transla=
tes to the code:
</p><pre>(A[i] - A[j]) * (B[i] - B[j]) &lt; 0
</pre>
This algorithm takes <i>O(n<sup>2</sup>)</i> and it's fast enough to solve =
our problem.
<p></p>
<p>
This problem is very similar to the classic one which asks for the number o=
f inversions within a given permutation. An inversion for a permutation <i>=
p</i> is a pair of two indexes <i>i &lt; j</i> such that <i>p<sub>i</sub> &=
gt; p<sub>j</sub></i>. Let's see why these problems are equivalent. If <i>r=
a</i> is the rank of <i>A[i]</i> when we sort <i>A</i> and <i>rb</i> is the=
 rank of <i>B[i]</i> when we sort <i>B</i>, then the ropes problem becomes =
the inversion count problem on the permutation <i>p</i> where <i>p<sub>ra</=
sub> =3D rb</i> for each <i>i</i>.
</p>
<p>
This new problem is a good application for divide and conquer algorithms, a=
nd can be solved in <i>O(n log n)</i> time. Merge sort can be adapted nicel=
y to not only sort an array, but count the number of inversions as well. Ot=
her solutions use data structures like segment trees, augmented balanced bi=
nary search trees or augmented skip lists.</p>

<a href=3D"http://www.google.com/search?q=3Dnumber+of+inversions+in+a+permu=
tation" target=3D"_blank">Number of inversions in a permutation</a></div><d=
iv id=3D"dsb-problem-analysis-div1" class=3D"dsb-problem-content-div" style=
=3D"display: none;"><h3>Understanding the sample cases</h3>
<p>In order to solve this problem, one first needs to get a feeling of what=
's asked, and looking at the sample cases is a good way to achieve that.</p=
>
<p>Take a look at the first sample case. The answer given is 2. How do we a=
chieve the result with just 2 loadtests? Let's make a couple guesses. Suppo=
se we do a loadtest that checks if the site supports 100 users. If we learn=
 that the site can't support 100 users, then we're done: we know we can sup=
port 50 users but can't support 100 which is 50*2. However, if we learn tha=
t the site can actually support 100 users, we have a very difficult task at=
 hand now: we have only one loadtest left, and we know that the site can su=
pport 100 users but can't support 700. Is it possible to solve it?</p>
<p>Suppose we now loadtest to check if the site supports 300 users. If we l=
earn that the site can't support 300 users, then we've failed to solve the =
problem: we know we can support 100, but can't support 300 - but 300 is mor=
e than 100*2, so we don't have enough knowledge. Moreover, this actually he=
lps us to prove that our loadtest must test for 200 users or less, otherwis=
e we will hit the same issue.</p>
<p>Now we know that our second loadtest must use at most 200 users. But eve=
n when it's exactly 200, suppose we learn that our site can actually suppor=
t all of them. Then we've failed to solve the problem again: we know we can=
 support 200, but can't support 700 - but 700 is more than 200*2.</p>
<p>So there's no good choice for our second loadtest. It means that the cho=
ice of the first loadtest was wrong - 100 users is too small for it.</p>
<h3>What have we learned?</h3>
<p>However, we've learned an important lesson in our failed attempt to unde=
rstand the example case: when we have only one loadtest left, and we know t=
hat the site can support <b>L</b> people but can't support <b>P</b> people,=
 we must loadtest with such number <b>X</b> that <b>L</b>*<b>C</b>&gt;=3D<b=
>X</b>, and at the same time <b>X</b>*<b>C</b>&gt;=3D<b>P</b>. The first in=
equality will help us solve the problem when the loadtest fails, and the se=
cond one is helpful if the loadtest succeeds.</p>
<p>Since there's no such number <b>X</b> for <b>L</b>=3D100, <b>P</b>=3D700=
, <b>C</b>=3D2, our first attempt above has failed.</p>
<p>The question now is: how to check if such <b>X</b> exists? From the firs=
t equation, we get <b>X</b>&lt;=3D<b>L</b>*<b>C</b>. From the second one, w=
e get <b>X</b>&gt;=3D<b>P</b>/<b>C</b>. Such <b>X</b> exists if and only if=
 <b>L</b>*<b>C</b>&gt;=3D<b>P</b>/<b>C</b>, which means <b>L</b>*<b>C</b><s=
up>2</sup>&gt;=3D<b>P</b>. Forgetting the formulas, the upper bound of our =
range should be at most <b>C</b><sup>2</sup> times more than the lower boun=
d. In that case, we can just take <b>X</b>=3D<b>L</b>*<b>C</b> for our only=
 loadtest.</p>
<h3>The second attempt at understanding the first sample case</h3>
<p>Equipped with this knowledge, we get back to the first sample case. 100 =
was wrong since 100*2<sup>2</sup>=3D100*4&lt;700. Maybe we should loadtest =
for 300 people first? If the loadtest succeeds, then we will have one loadt=
est left, 300 people OK, 700 people not OK, and since 300*4&gt;=3D700, we c=
an solve the problem. However, what if the loadtest doesn't succeed? We kno=
w that our system can support 50 people but can't support 300 people and ha=
ve only one loadtest left. Since 50*4&lt;300, we can't do that. So the choi=
ce of 300 was also wrong.</p>
<p>What if we try 200 as the first loadtest? In case it succeeds, we get on=
e loadtest, 200 OK, 700 not OK, 200*4&gt;=3D700 - we can do that. In case i=
t fails, we get 50 OK, 200 not OK, 50*4&gt;=3D200 - we can do that as well.=
 So we've finally figured out the algorithm to solve the first sample case =
using just 2 loadtests:</p>
<pre>Loadtest for 200 people. If the site can support 200 people:
  Loadtest for 400 people.
If the site can't support 200 people:
  Loadtest for 100 people.</pre>
<h3>What have we learned?</h3>
<p>So how do we figure out if two loadtests are enough? This is actually su=
rprisingly similar to the study of the one loadtest case.</p>
<p>When we have two loadtests left, and we know that the site can support <=
b>L</b> people but can't support <b>P</b> people, we must loadtest with suc=
h number <b>X</b> that <b>L</b>*<b>C</b><sup>2</sup>&gt;=3D<b>X</b>, and at=
 the same time <b>X</b>*<b>C</b><sup>2</sup>&gt;=3D<b>P</b>. The first ineq=
uality will help us solve the problem using one remaining loadtest when the=
 loadtest fails, and the second one is helpful if the loadtest succeeds.=20
</p><p>Using the same argument as above, one can see that such number <b>X<=
/b> exists if and only if <b>L</b>*<b>C</b><sup>4</sup>&gt;=3D<b>P</b> (we =
got <b>C</b><sup>4</sup> as <b>C</b><sup>2</sup>*<b>C</b><sup>2</sup>).</p>
<h3>More loadtests?</h3>
<p>Now it's not so hard to figure out what happens with more than two loadt=
ests. It's possible to solve the problem using three loadtests if and only =
if <b>L</b>*<b>C</b><sup>8</sup>&gt;=3D<b>P</b>. For four loadtests, we get=
 <b>L</b>*<b>C</b><sup>16</sup>&gt;=3D<b>P</b>. And so on. That pretty much=
 describes the solution for this problem.
</p><h3>Understanding the sample cases, attempt 3</h3>
<p>Now we can finally figure out the algorithm to solve the third sample ca=
se:  <b>L</b>=3D1, <b>P</b>=3D1000, <b>C</b>=3D2. In order to do this in fo=
ur loadtests, our first loadtest can be for <b>L</b>*<b>C</b><sup>8</sup>=
=3D256:</p>
<pre>Loadtest for 256 people. If the site can support them:
  Loadtest for 512 people.
If we can't support 256 people:
  Loadtest for 16 people. If the site can support them:
    Loadtest for 64 people. If the site can support them:
      Loadtest for 128 people.
    If we can't support 64 people:
      Loadtest for 32 people.
  If we can't support 16 people:
    Loadtest for 4 people. If the site can support them:
      Loadtest for 8 people.
    If we can't support 4 people:
      Loadtest for 2 people.</pre>
<p>This looks quite similar to the binary search algorithm, but performed o=
n exponential scale.</p>
<h3>Conclusion</h3>
<p>We started solving this problem by trying to understand the answers for =
the sample cases, and by the time we actually understood them, we already h=
ave a complete solution. The only remaining thing is to implement the solut=
ion carefully avoiding the integer overflow issues.</p>
</div><div id=3D"dsb-problem-analysis-div2" class=3D"dsb-problem-content-di=
v" style=3D"display: none;"><h3>Finding the largest chess board</h3>
<p>
First, we need a quick way to find the largest chess board. There is classi=
c dynamic programming trick that goes like this. Let's compute, for each ce=
ll <nobr>(i, j)</nobr>, the size of the largest square whose bottom-right c=
orner is <nobr>(i, j)</nobr>. Let's call this value larg[i][j]. It is easy =
to compute larg[i][0] and larg[0][j] -- they are always 1. For any other ce=
ll, the value of larg[i][j] is always at least 1, and it is larger only if =
the following condition holds:
</p><pre>  if (board[i - 1][j] !=3D board[i][j] &amp;&amp;
      board[i][j - 1] !=3D board[i][j] &amp;&amp;
      board[i - 1][j - 1] =3D=3D board[i][j]) {
    larg[i][j] =3D 1 + min(larg[i - 1][j],
                         larg[i][j - 1],
                         larg[i - 1][j - 1]);
  }
</pre>
In a single, linear-time, row-by-row scan, we can compute the values of lar=
g[][] for all cells.
<p></p>

<h3>Finding the chess board to remove</h3>
<p>
Now that we have larg[][], it is very easy to find the first chess board th=
at we should cut out. Its bottom-right corner is in the cell that has the l=
argest possible value in larg[][]. If there are several such cells, we use =
the tie-breaking rules described in the problem and choose the one that com=
es first in lexicographic order of <nobr>(i, j)</nobr>.
</p>
<p>
We can do this in linear time by scanning larg[][], but since we will have =
to do this many times, it is better to make a heap of triples of the form
</p><pre>  (-larg[i][j], i, j)
</pre>
and take the smallest element from that heap. This way, we are sorting all =
cells by decreasing size, then by increasing row, then by increasing column=
. As long as we can update this heap efficiently after cutting out a chess =
board, we can always retrieve the smallest element in <nobr>O(log(m*n))</no=
br> time. We could also use a balanced binary search tree instead of a heap=
.
<p></p>

<h3>Removing the chess board and updating larg[][]</h3>
<p>
Consider removing the first 6x6 chess board from the example input describe=
d in the problem statement. How should we update larg[][]? First of all, we=
 can fill the 6x6 square of cells with zeros because there are no more ches=
s boards to be removed from those locations. But that is not all. There are=
 other cells that might need to be updated. Where are they, and how many of=
 them are there?
</p>
<p>
Naively, we can simply recompute the values of all non-zero cells in larg[]=
[] and continue. If we do that, we will have a <nobr>O(m<sup>2</sup>*n<sup>=
2</sup>)</nobr> algorithm, which is too slow.
</p>
<p>
First of all, notice that we do not need to update rows above or to the lef=
t of the 6x6 square. Any square chess boards whose bottom-right corners are=
 in those areas still exist and can be cut out later. The only chess boards=
 that we need to worry about are those that overlap the 6x6 board that we h=
ave just removed. Also, notice that we have just removed the largest possib=
le chess board, so we only need to care about remaining boards of size 6 or=
 smaller. Where can their bottom-right corners lie in order for those board=
s to overlap <i>our</i> board? They must be in the 12x12 square whose cente=
r is at <nobr>(i, j)</nobr> -- the bottom-right corner of our board.
</p>
<p>
That's an area of size <nobr>4*6<sup>2</sup></nobr>. In fact, whenever we r=
emove a board of size k-by-k, we only need to update an area of larg[][] of=
 size at most <nobr>2k-by-2k</nobr>. Since we can only remove each cell at =
most once, all of the updating work requires linear time in total; <nobr>4*=
m*n</nobr> updates, to be precise.
</p>

<h3>Updating the heap</h3>
<p>
Each time we update larg[][], we must also update the heap that lets us fin=
d the next board to remove. This means finding and removing an old entry, a=
s well as inserting a new entry. With pointers from cells to heap elements,=
 or by using a balanced binary search tree, both steps can be done in <nobr=
>O(m*n)</nobr> time.
</p>
<p>
In total, this algorithm runs in <nobr>O(n*m*log(n*m))</nobr> time, which i=
s plenty fast for the problem's constraints.
</p></div></div>

    <div id=3D"dsb-clarification-page" class=3D"dsb-content-pages">
      <!-- The clarifications table -->
      <div id=3D"clarTableDiv" class=3D"clarTableWrapper"></div><div>
        <table id=3D"dsb-clarification-table" style=3D"display: none;">
          <colgroup span=3D"9">
            <col width=3D"16%"><col width=3D"2%">
            <col width=3D"10%"><col width=3D"2%">
            <col width=3D"28%"><col width=3D"2%">
            <col width=3D"10%"><col width=3D"2%">
            <col width=3D"28%">
          </colgroup>
          <thead>
            <tr>
            <th>Category</th><th>&nbsp;</th>
            <th class=3D"clarTimeColumn">Asked</th><th>&nbsp;</th>
            <th>Question</th><th>&nbsp;</th>
            <th class=3D"clarTimeColumn">Answered</th><th>&nbsp;</th>
            <th>Answer</th>
            </tr>
          </thead>
          <tbody id=3D"dsb-clarification-tbody"></tbody>
        </table>
      </div>
      <div id=3D"dsb-submit-clarification" style=3D"display: none;">
        <!-- The link to ask a clarification -->
        <div style=3D"padding: 0.5em 0 0.3em 0;">
          <b>Ask a question:</b>
        </div>
        <!-- The form for asking clarification -->
        <div>
          <form onsubmit=3D"return GCJ.submitClarification(this);"><div sty=
le=3D"display:none;"><input type=3D"hidden" name=3D"csrfmiddlewaretoken" va=
lue=3D"ZTJiZGIwNWNjNzRhM2I5NzA5ODM1NDQ3NDY5M2JkNGN8MTExMzA2OTI1NTM4ODY2NTA4=
MjY1fDE0ODgyMTY4NDY5MDM5NDA=3D"></div>
            <div><textarea rows=3D"5" cols=3D"60" name=3D"q"></textarea></d=
iv>
            <div style=3D"padding-top: 0.3em">
              <select id=3D"dsb-clarification-problem-select" name=3D"probl=
em">
                <option value=3D"_" selected=3D"">[General]</option>
              <option value=3D"599117">A. Rope Intranet</option><option val=
ue=3D"551112">B. Load Testing</option><option value=3D"563116">C. Making Ch=
ess Boards</option></select>
              &nbsp;
              <input id=3D"dsb-submit-clarification-button" type=3D"submit"=
 value=3D"Ask">
            </div>
          </form>
        </div>
      </div>
      <!-- Too many pending clarifications -->
      <div id=3D"dsb-cannot-ask-question-text" style=3D"font-weight: bold; =
padding: 0.5em 0px 0.3em; display: block;">You cannot ask questions at this=
 time. Please email us at codejam@google.com.</div>

    </div>

    <div id=3D"dsb-submissions-page" class=3D"dsb-content-pages">
      <div id=3D"dsb-submissions-status" class=3D"dsb-sub-status-msg">
        You have 0 submissions.
      </div>
      <table id=3D"dsb-submissions-table" class=3D"dsb-sub-main-table" styl=
e=3D"display:none">
      <thead>
        <tr id=3D"dsb-sub-main-table-header">
          <th class=3D"dsb-sub-row-id-width">ID</th>
          <th class=3D"dsb-sub-name-width">Problem</th>
          <th class=3D"dsb-sub-difficulty-width">Size</th>
          <th class=3D"dsb-sub-input-width">Input</th>
          <th class=3D"dsb-sub-output-width">Output</th>
          <th class=3D"dsb-sub-source-width">Solution</th>
          <th class=3D"dsb-sub-status-width">Status</th>
          <th class=3D"dsb-sub-time-width">Time</th>
        </tr>
      </thead>
      <tbody id=3D"dsb-submissions-rows">
      </tbody>
      </table>
    </div>

  </div>
  </div>
</div>

</div>

<div style=3D"height: 3em; clear: both;"></div>




<div id=3D"footer">
 =20
 =20
  <p>
    All problem statements, input data and contest analyses are
    licensed under the
    <a href=3D"http://creativecommons.org/licenses/by/3.0/">Creative Common=
s Attribution License</a>.
   =20
  </p>
 =20
  <span id=3D"copyright">=C2=A9 2008-2017 Google</span>
  <a href=3D"http://www.google.com/">Google Home</a> -
  <a href=3D"https://code.google.com/codejam/terms.html">Terms and Conditio=
ns</a> -
  <a href=3D"http://www.google.com/intl/en/policies">Privacy Policies and P=
rinciples</a>
  <br><br>
  <a href=3D"http://cloud.google.com/"><img width=3D"125" height=3D"91" src=
=3D"https://code.google.com/codejam/contest/static/powered_by_gcp_logo.png"=
></a>
 =20
</div>






<div style=3D"height: 1em">&nbsp;</div>

<input type=3D"text" name=3D"history_state0" id=3D"history_state0" style=3D=
"display:none">




</div></body></html>
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://code.google.com/codejam/contest/css/35/base.css

@charset "utf-8";

body { background-color: white; color: black; font-family: Arial, sans-seri=
f; font-size: small; margin: 3px 8px; min-width: 970px; }

img { border: 0px; }

table { border-collapse: collapse; font-size: small; }

th, td { padding: 0px; vertical-align: top; text-align: left; }

a:link { color: rgb(0, 0, 204); }

a:active { color: rgb(204, 0, 0); }

a:visited { color: rgb(85, 26, 139); }

h1 { font-size: x-large; margin-top: 0px; }

h2 { font-size: large; }

h3 { font-size: medium; }

h4 { font-size: small; }

form { margin: 0px; padding: 0px; }

li { margin-bottom: 0.25em; }

pre, code { color: rgb(0, 112, 0); font-family: "bogus font here", monospac=
e; font-size: 100%; }

pre { border: 1px solid silver; background-color: rgb(245, 245, 245); paddi=
ng: 0.5em; overflow: auto; margin: 2em; }

pre ins { color: rgb(204, 0, 0); font-weight: bold; text-decoration: none; =
}

.newmark { color: red; font-size: 80%; vertical-align: top; }

a.selected, .selected a, .selected { color: black; font-weight: bold; text-=
decoration: none; }

a.selected:visited, .selected a:visited { color: black; }

#gaia { text-align: right; }

#header { height: 60px; margin-bottom: 11px; position: relative; }

#logo-div { position: absolute; top: 1em; left: 0px; padding: 0px 0px 0px 0=
.7em; z-index: 100; }

#logo { padding: 10px; border: 0px; }

#logo-padder { padding-top: 1.3em; }

#title { border-top: 1px solid rgb(51, 102, 204); background-color: rgb(229=
, 236, 249); font-size: large; font-weight: bold; margin: 5px 0px 0px; padd=
ing: 1px 0px; }

#title, #breadcrumbs { margin-left: 160px; padding-left: 3px; }

#breadcrumbs { margin-top: 3px; }

#side { width: 167px; margin-bottom: 3em; float: left; }

#menu ul { margin: 0px 0px 1em; padding: 0px; list-style-type: none; }

#menu ul ul { margin-left: 10px; margin-bottom: 0px; }

#menu li { margin-top: 4px; }

#menu h4 { margin: 0px 0px 1em; padding: 0px; }

#search { margin-top: 2em; }

#search .header { font-weight: bold; font-size: 90%; margin-bottom: 1px; }

#search .button { margin-top: 1px; }

#search .input input { width: 125px; }

#body { border-left: 1px dotted silver; margin-left: 169px; margin-right: 2=
5px; padding-left: 18px; padding-bottom: 25px; }

#footer { text-align: center; width: 100%; border-top: 1px solid rgb(204, 2=
04, 204); padding: 10px 0px; font-size: 90%; }

div.download { padding-top: 0.5em; padding-bottom: 0.5em; }

div.download a { border: 1px solid rgb(51, 102, 204); background-color: rgb=
(229, 236, 249); padding: 0.5em; position: relative; font-weight: bold; }

.termsagree { margin-top: 1em; margin-bottom: 1em; background-color: rgb(22=
9, 236, 249); padding: 0.5em; }

.termsagree .button { padding-top: 0.5em; }

.termsagree .text { font-weight: bold; }

.termsagree .text .printable { font-weight: normal; }

.termsagree .text, .termsagree .button { padding-left: 5px; }

@media print {
  .noprint { display: none; }
  #header, #side, #gaia { display: none; }
  #body { margin: 0px; border: 0px; padding: 0px; }
}

#copyright { margin-right: 0.8em; }

#guser { font-size: 13px; position: absolute; top: 0px; right: 0px; padding=
: 2px 10px 7px 0px; z-index: 100; }

#welcome-bar { margin: 1.5em 0px 0px 12em; padding: 0.5em; font-size: 120%;=
 font-weight: bold; color: rgb(68, 125, 190); border-top: 1px solid rgb(204=
, 204, 204); }

.bold { font-weight: bold; }

.gray { color: gray; }

span.hDivider { padding-left: 0.7em; }

.v-divider { height: 0.7em; }

div.dynamic-link { padding: 0.3em 0.4em 0.3em 0.8em; margin-bottom: 0.2em; =
font-size: 95%; color: blue; cursor: pointer; text-decoration: underline; }

div.dynamic-link a:visited { color: blue; }

#common-body div { }

#common-nav-div { clear: none; float: left; height: 100%; }

#common-nav-wrapper { width: 16em; border-right: 1px solid rgb(201, 237, 20=
4); overflow: hidden; }

#common-nav-wrapper div { display: block; }

.common-nav-section-title { padding: 0.5em; width: 100%; color: rgb(51, 51,=
 51); }

.common-nav-links > div { padding: 0.5em 1em; width: 100%; font-weight: bol=
d; }

.common-nav-links > .active-link:link { color: rgb(25, 25, 112); }

.common-nav-links > .active-link:visited { color: rgb(25, 25, 112); }

.common-nav-links > .active-link:hover { color: rgb(0, 0, 128); background-=
color: rgb(255, 255, 238); }

.common-nav-links > .current-link { color: rgb(0, 0, 128); background-color=
: rgb(201, 237, 204); }

#index-moreinfo > div { padding: 0.2em 0.5em; }

#common-content-div { margin-left: 17em; margin-right: 0px; }

#common-content-div > div { position: relative; padding: 2em; width: 90%; m=
ax-width: 800px; }

#index-moreinfo .active-link, #index-moreinfo a { color: navy; text-decorat=
ion: underline; cursor: pointer; }

#index-moreinfo .current-link { background-color: rgb(201, 237, 204); }

#index-moreinfo > div { width: 100%; background: url("../../static/bg_red_a=
rrow.gif") 5px 5px no-repeat; padding-left: 20px; }

#common-nav-links { user-select: none; }

table.schedule { border: 1px solid black; }

.schedule .desc { font-weight: bold; width: 17em; }

.schedule .date { width: 8em; }

.schedule .duration { width: 8em; }

.schedule .links { text-align: center; width: 6em; border-left: 0px; border=
-right: 0px; }
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://code.google.com/codejam/contest/css/35/dashboard.css

@charset "utf-8";

body { min-width: 50em; }

form { margin: 0px; }

#dsb-page-body { position: relative; clear: both; margin: 0px 0px 0.5em; di=
splay: block; }

table, th, tr, td { border-collapse: collapse; border-width: 0pt; margin: 0=
px; padding: 0px; text-align: left; vertical-align: top; }

div.main { display: none; }

#dsb-header-links { text-align: right; }

#dsb-contest-title-bar { position: relative; padding: 0.5em 0.3em 0.3em; te=
xt-align: right; }

#dsb-rank-etc { float: left; }

#left-panel { float: left; width: 14.6em; overflow: hidden; display: inline=
; padding-top: 5.3em; }

#dsb-analysis-button { display: none; }

#dsb-contest-title { color: rgb(51, 51, 51); padding: 0px 0px 0px 0.8em; }

.before-start-only { display: none; }

.before-start-only-inline { display: none; }

.after-start-only { display: none; }

.after-start-only-inline { display: none; }

div.dsb-pre-contest-text { color: black; cursor: default; text-decoration: =
none; position: relative; padding: 0.5em 1em; }

div.dsb-problem-tab-open div.dynamic-link { color: black; cursor: default; =
font-weight: bold; text-decoration: none; background-color: rgb(195, 217, 2=
55); }

div.dsb-clar-tab-open div.dynamic-link, div.dsb-submissions-tab-open div.dy=
namic-link, div.dsb-analysis-tab-open div.dynamic-link { color: black; curs=
or: default; font-weight: bold; text-decoration: none; background-color: rg=
b(201, 237, 204); }

div.dsb-clar-tab-close div.dynamic-link, div.dsb-submissions-tab-close div.=
dynamic-link, div.dsb-problem-tab-close div.dynamic-link, div.dsb-analysis-=
tab-close div.dynamic-link { background-color: white; cursor: pointer; }

div.dsb-problem-tab-open div.dynamic-link div, div.dsb-analysis-tab-open di=
v.dynamic-link div { color: black; text-decoration: none; display: inline; =
}

div.dsb-problem-tab-close div.dynamic-link div, div.dsb-analysis-tab-close =
div.dynamic-link div { color: blue; text-decoration: underline; display: in=
line; }

div.problem-status-wrapper { padding: 0.3em 0.5em 0.3em 0.3em; }

table.problemStatus { margin: 0.3em 0px 0.3em 0em; color: rgb(102, 102, 102=
); font-size: 90%; width: 100%; }

table.problemStatus td.inputName { width: 2em; text-align: right; padding-r=
ight: 0.4em; border-right: 1px solid rgb(182, 202, 238); }

table.problemStatus td.status { padding-left: 0.4em; }

.dsb-mini-status-highlight { color: black; display: inline; background-colo=
r: rgb(238, 251, 206); }

.dsb-mini-status-non-highlight { color: black; }

.dsb-mini-tab-wrapper { border: 0.2em solid rgb(195, 217, 255); margin: 0px=
 0.9em 0px 0.3em; width: 13.5em; border-radius: 0.3em; }

.dsb-status-problem-title { color: black; font-size: 90%; padding: 0.15em 0=
px 0.25em; border-bottom: 1px solid rgb(204, 204, 204); }

#dsb-scoreboard-div { font-weight: 500; }

#dsb-scoreboard-table { width: 13.48em; font-size: small; }

#dsb-scoreboard-header-div, #dsb-status-header-div { border-bottom: 1px sol=
id rgb(195, 217, 255); background-color: rgb(195, 217, 255); padding-top: 0=
.25em; padding-bottom: 0.25em; padding-left: 0.5em; font-size: 95%; }

div.dsb-mini-tab-link { padding: 0px 0.5em 0.5em 0px; text-align: right; }

.dsb-name-td { width: 11em; padding: 0.2em 0px 0.2em 0.5em; }

.dsb-score-td { text-align: right; width: 2.48em; padding: 0.2em 0.5em 0.2e=
m 0px; }

.dsb-scoreboard-row-odd { background-color: rgb(238, 238, 238); }

hr.dsb-hr { background-color: rgb(195, 217, 255); color: rgb(195, 217, 255)=
; width: 90%; height: 1px; border: 0px; }

#right-panel { float: none; margin-left: 14.5em; z-index: 5; }

div.dsb-blue-border { position: relative; padding: 0.45em; background-color=
: rgb(195, 217, 255); border-radius: 0.2em; }

div.dsb-green-border { position: relative; padding: 0.45em; background-colo=
r: rgb(201, 237, 204); border-radius: 0.2em; }

#dsb-border-inner { background-color: white; padding: 0.5em; }

div.dsb-status-msg-wrapper { text-align: center; visibility: hidden; }

div.dsb-status-msg { font-weight: bold; display: inline; padding: 0.4em 1em=
; line-height: 1.75em; background-color: rgb(250, 236, 165); border-radius:=
 0.5em; }

#dsb-view-sub-link { color: blue; text-decoration: underline; cursor: point=
er; }

.dsb-content-pages { padding: 1em; display: none; min-height: 45em; height:=
 auto !important; }

div.clarTableWrapper { padding-top: 1em; max-height: 40em; overflow: auto; =
}

tr.dsb-clar-tr td { empty-cells: show; padding-top: 0.2em; padding-bottom: =
0.2em; padding-left: 0.5em; border-top: 1px solid rgb(221, 221, 221); borde=
r-bottom: 1px solid rgb(221, 221, 221); }

tr.dsb-clar-tr-odd { background-color: rgb(239, 239, 239); }

tr.dsb-clar-tr-announcement { background-color: rgb(255, 255, 212); }

.clarTimeColumn { text-align: right; }

td.clarProbTd { padding: 0.2em 0.5em; }

div.problem-title { color: rgb(51, 51, 51); padding: 0.4em; margin: 0px 0.5=
em; border-bottom: 0.1em solid rgb(232, 240, 255); font-size: 112%; font-we=
ight: bold; }

.dsb-input-panel-text { padding-bottom: 0.5em; }

span.problemInput { padding: 0.4em; height: 1em; }

span.inputText { display: inline; padding-left: 0.3em; vertical-align: midd=
le; }

span.inputText span.inputLink { color: blue; text-decoration: underline; }

span.inputTextStatic { display: inline; padding-left: 0.3em; vertical-align=
: middle; }

input.submitFormFile { margin: 0.1em 0.5em; }

span.dsb-submit-form-links { margin-left: 0.25em; color: blue; cursor: poin=
ter; text-decoration: underline; }

span.dsb-submit-form-redownload-zipped-link { margin-left: 0em; }

div.dsb-submit-form-separator { margin-top: 0.5em; padding-top: 0.5em; padd=
ing-bottom: 0.2em; border-top: 0.1em solid rgb(255, 248, 170); }

.dsb-problem-content-div { vertical-align: top; margin-right: 6em; margin-t=
op: 2em; max-width: 40em; min-height: 45em; height: auto !important; }

#dsb-clar-close-image-div { position: absolute; top: 0.1em; left: 0.1em; te=
xt-align: left; }

#dsb-time-remaining-before { color: rgb(153, 153, 153); display: inline; }

#dsb-time-remaining { color: rgb(153, 153, 153); display: inline; }

#dsb-current-score-div, #dsb-current-rank-div { color: rgb(51, 51, 51); pad=
ding-left: 0.5em; display: inline; }

#dsb-current-score-span, #dsb-current-rank-span { color: rgb(63, 118, 44); =
}

#dsb-clarification-table { min-width: 30em; display: none; }

#dsb-clarification-table th, #dsb-clarification-table td, #dsb-submissions-=
table th, #dsb-submissions-table td { padding: 0.3em; }

#dsb-clarification-table th, #dsb-submissions-table th { font-size: 90%; fo=
nt-weight: 500; }

.problem-item, .problem-item-gray { font-size: 110%; }

.dsb-problem-content-div > h3, .dsb-problem-content-div > h4 { font-size: 1=
10%; font-weight: normal; }

.problem-item-gray { font-size: 100%; }

.dsb-problem-content-div > .problem-io-wrapper { background-color: rgb(239,=
 239, 239); border: 1px solid rgb(204, 204, 204); padding-bottom: 2em; marg=
in-bottom: 2em; width: 90%; overflow-x: auto; overflow-y: hidden; }

.problem-io-wrapper td { padding: 0px 1em; }

.problem-io-wrapper .io-table-header { font-size: 100%; }

.problem-io-wrapper .io-content { border: 0px; background-color: rgb(239, 2=
39, 239); padding: 0px; margin: 0px; width: 100%; font-size: 100%; }

.dsb-input-table-description { padding: 0.5em; color: rgb(51, 51, 51); line=
-height: 1.5em; border-right: 0.1em solid rgb(204, 204, 204); white-space: =
nowrap; }

.dsb-input-table-caption { display: block; margin-top: 0.4em; padding-left:=
 0.5em; color: rgb(102, 102, 102); }

.dsb-input-table-linktd { padding: 0.5em; }

.dsb-input-link-span { cursor: pointer; display: inline; text-decoration: n=
one; }

.dsb-input-link-text { color: blue; text-decoration: underline; cursor: poi=
nter; }

.dsb-input-link-img { display: inline; padding-right: 0.2em; }

.dsb-no-image-link-text { margin-left: 15px; padding-left: 0.2em; }

.dsb-action-box-open { background-color: rgb(250, 236, 165); padding: 0.5em=
; max-width: 31em; border-right: 1px solid rgb(221, 200, 80); border-bottom=
: 1px solid rgb(221, 200, 80); border-radius: 0.5em; }

.dsb-input-wrapper { padding: 0.4em; display: inline; }

.dsb-submit-form-div { top: -0.2em; display: none; padding: 0.4em; max-widt=
h: 30em; }

.dsb-input-start-button { font-size: 100%; }

img { vertical-align: middle; }

.dsb-has-new-question-tab { font-weight: bold; }

.dsb-unread-count { display: inline-block; padding: 1px 6px; color: rgb(255=
, 255, 255); background-color: rgb(209, 72, 54); border: 1px solid rgb(193,=
 56, 40); border-radius: 2px; margin-left: 5px; }

pre, code { color: black; }

pre { width: 86%; font-size: 90%; }

.dsb-sub-status-msg { height: 1.2em; font-size: 100%; margin-bottom: 0.5em;=
 text-align: left; }

.dsb-sub-row-id-width { width: 2em; }

.dsb-sub-name-width { width: 12em; }

.dsb-sub-difficulty-width { width: 5em; }

.dsb-sub-input-width, .dsb-sub-output-width, .dsb-sub-source-width { width:=
 4.5em; }

.dsb-sub-status-width { width: 7.5em; text-align: right; }

.dsb-sub-time-width { width: 7.5em; text-align: right; }

.dsb-sub-download-link-span { display: block; width: 15px; height: 15px; cu=
rsor: pointer; }

.dsb-sub-download-link-disabled-span { cursor: default; }

.dsb-sub-even-row { background-color: rgb(239, 239, 239); }

.dsb-sub-odd-row { background-color: rgb(255, 255, 255); }

tr.dsb-sub-odd-row td, tr.dsb-sub-even-row td { empty-cells: show; padding-=
top: 0.2em; padding-bottom: 0.2em; padding-left: 0.5em; border-top: 1px sol=
id rgb(221, 221, 221); border-bottom: 1px solid rgb(221, 221, 221); }

.dsb-analysis-selected { color: black; text-decoration: none; cursor: defau=
lt; }

.dsb-analysis-not-selected { color: blue; text-decoration: underline; curso=
r: pointer; }

a.dsb-download-sample-link { color: rgb(0, 0, 204); cursor: pointer; }

a.dsb-download-sample-link:visited { color: rgb(85, 26, 139); }
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/static/logo_image3.gif

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
dbrznXqTJTznSc+3tbOe+Mzn2EIAADs=
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/static/minus.gif

R0lGODlhCgAKAOf+AHp64LrZ8aurq83NzfPz8yUqLdPp9wGM1UJCQgAbzODk4RwdHXWdfPb29j6f
STAwMNPT75qam/+Hh8/m0dOEhOz1/LfL1wNxq1RUVN7e3oiIqt2goJyyqsnTy/8DA32snjiNp2uv
3pnJ6ZWV59ra2hKKIGZmZomJiXG0487Y0IvFkf9LSzOa2oOlilCq4f39/ajR7oCBgrjHugBoyf9w
cIeG5djQlMTa6v8rK3W55cPP263CmIfC6W62dnF2sAByzPDw8NPo99nh66YAAGq15fT5/cji9OTt
+E1ZuaKkpYx74wkJCaq8x5axm8ppaf/ojae8q42Njfn5+bxAQJ+fn7ApKfve3sHBwU2j3N3d+HV1
4v3v79LS09vp83h4eOPx5Obo5t7t+E2mV9zc3O7Pz7i4uKPO7ZDF6kJC2EuVpKen62JudH6Nlnu5
5ePf+PPmqv+9vWJi3LOzs8nJyVNT20hsi5OTk+Pr8/+mpszM9enp6f/NzQBvFLfauyIi0g2Nu5qM
5m99hqbRrLu78VRdYzIy1Yq95Pv8/fX2+G9wcfLv+7Oz6djf2VutZOTk8WGq3MTGyV1J2bLX8dPc
1aqd6Z8MDdTP88a+8O7u/PzolGZm4AB2L5zH5rit7QB90Gxa3Obp68PD7Ozu8F2QaDgr0o+rlLux
ntvm8Sh9QD6mzvT09kaf2vL58/n7/Xtq30OFU+3t7ens6YOFhvLy8mav4ks51ZXD5dXX26/CsvHz
9dvd4JzNoU+q4Xxr4Ky1wOnq7dPq90+p4ERLT7W4uq6uriEgz5PI67DYtYW91jU7P3R5f4iPlREc
z+PdyPT09H296GRobr7d88HfxI6cpry8vL29vYKHjoqKiu/v7+7u7r+/wH+BrfHx8V9gYICAgDNE
vxEpyIixnMy/msDNwujAwKqkoiI2xO3akcJQUNLj8I+sle3v7V2v43e75+7gj+/l5ZOVl+Ovrw4c
z2aioR8fz+Tk5e3w7re3t+jpxu/w8n9/5fX19/X19U+p4QAAAP///yH+FUNyZWF0ZWQgd2l0aCBU
aGUgR0lNUAAsAAAAAAoACgAACB0A/wkcSLCgwYMIDfbj1S8Yr2AEGS5cmLCixYsBAQA7
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/static/file.gif

R0lGODlhEQARAJEAAGZmZv////8AAJmZmSH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLv
u78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJh
ZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNC4xLWMwMzQgNDYuMjcyOTc2
LCBTYXQgSmFuIDI3IDIwMDcgMjI6MTE6NDEgICAgICAgICI+CiAgIDxyZGY6UkRGIHhtbG5zOnJk
Zj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxy
ZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOnhhcD0iaHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLyI+CiAgICAgICAgIDx4YXA6Q3JlYXRvclRvb2w+QWRvYmUg
RmlyZXdvcmtzIENTMzwveGFwOkNyZWF0b3JUb29sPgogICAgICAgICA8eGFwOkNyZWF0ZURhdGU+
MjAwNy0xMS0wOFQyMDoxMjo0NVo8L3hhcDpDcmVhdGVEYXRlPgogICAgICAgICA8eGFwOk1vZGlm
eURhdGU+MjAwNy0xMS0wOFQyMDoxODo0N1o8L3hhcDpNb2RpZnlEYXRlPgogICAgICA8L3JkZjpE
ZXNjcmlwdGlvbj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAg
ICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj4KICAgICAgICAg
PGRjOmZvcm1hdD5pbWFnZS9naWY8L2RjOmZvcm1hdD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+
CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tl
dCBlbmQ9InciPz4B//79/Pv6+fj39vX08/Lx8O/u7ezr6uno5+bl5OPi4eDf3t3c29rZ2NfW1dTT
0tHQz87NzMvKycjHxsXEw8LBwL++vby7urm4t7a1tLOysbCvrq2sq6qpqKempaSjoqGgn56dnJua
mZiXlpWUk5KRkI+OjYyLiomIh4aFhIOCgYB/fn18e3p5eHd2dXRzcnFwb25tbGtqaWhnZmVkY2Jh
YF9eXVxbWllYV1ZVVFNSUVBPTk1MS0pJSEdGRURDQkFAPz49PAA6OTg3NjU0MzIxMC8uLSwrKiko
JyYlJCMiISAfHh0cGxoZGBcWFRQTEhEQDw4NDAsKCQgHBgUEAwIBAAAh+QQBBwACACwAAAAAEQAR
AAACOIRvorsQDxNrMA4wlasBjJttlfdhzGY8iKRxrtl2K3q6HCygs1rbUT+jUXy8YbAYI+JEvmVw
xSgAADs=
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/images/?image=RopeIntranet.png&p=599117&c=619102

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
KiJvByxcuHDhwoU9f926A+sOrDsgTaiaUDWhSqpIqkiqSLK9GxizZs2aNWtWz8HiTp2dnZ2dnVJL
S0tLS4tUU1NTU1Njezewpf7V+lfrX5XCN8I3wjekdZfXXV53ueejMlPxWrZs2bJly6TKysrKykrb
u4FtBAyXaGpqampqkiZPnjx58uT+n62b1xTDieHEcGLkJ2fYsWnTpk2bNkkNDQ0NDQ39f87169ev
X78uvfDCCy+88ILtXcGW8t+X/77891LembwzeWf6/vXm+8qMGTNmzJghNTY2NjY22t4VbCFguMTn
n3/++eef975i0RNTMj2efjz9eLrt3bnXhx9++OGHHzr3vPPnz58/f37ggQWxxRyJZDVkNWQ1DPx5
pqJx6dKlS5cu2d4dbKEHwyXa29vb29ude575SeXvX/79y79/KdVtqNtQt8H2Lt3nwoULFy5ccP65
q1atWrVqlfTkk08++eSTtneJwdYysmVky0jpYNbBrIMONveayhjciQoGAGBQeDwej8djexWwhQqG
SyQnJycnJzv3PNN78XjG4xmPZ/BWiS1Hjhw5cuSI1Nra2trq4N//rl27du3aFenZQXwzRyTmbRCn
XlM2TcRwJyoYLvHII4888sgjkffZB6rswbIHyx6U/E3+Jn+T7d2519KlS5cuXerc8x544IEHHniA
YOE2/lp/rb9Wqm+sb6x3oCnTBBXuxXA3AoZLmHsOTPNef9/+CIVCoVBI8nZ5u7xd3PRo29q1a9eu
XTvwQJCUlJSUlCQVFRUVFRXZ3hVs8b3ne8/3nlTRUNFQ0dD3rzffV8zrzg8//PDDDz9se1ewhYDh
MuYippKSkpKSEun9999///33e/46c9FW8+zm2c2zORKJNqtXr169enXfv87c3Pr666+//vrr0qJF
ixYtWmR7N7DFVDJS81LzUvOkkrSStJK0nn8gMRWLHTt27NixQ/L7/X6/3/ZuYBs9GC6Vk5OTk5MT
uSr8pZdeeumllyL/4Hwz+5vZ38yWvKO9o72jpYJlBcsKlkmeA54DngO2Vw/DjFUvLCwsLCyM3MQ5
ceLEiRMnSnv27NmzZ4/U0dHR0dER+TpzVbj5PJUo3M4EjaltU9um/sRV4R0TOyZ2TIzcezFv3rx5
8+bZXj2ixbCu/7K9kN5aOWflnJVzpOVblm9ZvmXgz8OPM99QuDo6uj366KOPPvqo5PV6vV6vVF5e
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
CnZJ9gAAAABJRU5ErkJggg==
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/images/?image=mcb.png&p=563116&c=619102

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
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://code.google.com/codejam/contest/static/powered_by_gcp_logo.png

iVBORw0KGgoAAAANSUhEUgAAAPoAAAC2CAYAAADwdpAqAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAABBtpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTExIDc5LjE1
ODMyNSwgMjAxNS8wOS8xMC0wMToxMDoyMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
MC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVz
b3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5z
OmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1wTU06T3JpZ2luYWxEb2N1
bWVudElEPSJ1dWlkOjY1RTYzOTA2ODZDRjExREJBNkUyRDg4N0NFQUNCNDA3IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjM0NjZDNTZBNUU4NzExRTY4OEU2RDE0REJENTgxRkQxIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjM0NjZDNTY5NUU4NzExRTY4OEU2RDE0REJENTgxRkQxIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIElsbHVzdHJhdG9yIENDIDIwMTUgKE1hY2ludG9zaCkiPiA8eG1w
TU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0idXVpZDo5MmFmMmU1MC1hZDQxLTJjNDgt
YTU3OC04N2RkNmM3NDhiZDMiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NjFlYWQ3NjYtMTFh
MS00ZTRlLTgyOGMtOWJjM2FhNWJhM2ZjIi8+IDxkYzp0aXRsZT4gPHJkZjpBbHQ+IDxyZGY6bGkg
eG1sOmxhbmc9IngtZGVmYXVsdCI+bG9nb19sb2NrdXBfY2xvdWRfcGxhdGZvcm1faWNvbl92ZXJ0
aWNhbF9uZXc8L3JkZjpsaT4gPC9yZGY6QWx0PiA8L2RjOnRpdGxlPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/Ptcy7xgAACeySURB
VHja7H0JfBXVvf+Zu+RmuYSQhBA2QQg7ChW1CiigVlGrdcGtKjy1imi1z+3ZvmeX/1/7bF996v+9
8qq2guDS1g9uz6W4EwRFBBsqOwFMRAwESO6+zHL+c8Jv5GSYuXfmztzkJvy+n8+Bm1nOnHPm9/1t
58yMQCklxzIEQSCIvGGyWh5US4Nafm7h+AfhnJ/DOVlxrMuvVfhwCMjrWfY3quVttSzHoUIg0Xs+
GKGjum11XDkPLE0UhwqBRO+5WGLiLjJX8n4g++VwHALRo+DBIcgKRv6X4PcctQRxSBBo0XsnWHw+
j3PnecvPiD9bLZPA+rdAGLBaLat09dwPxy+BY3iwOqbBecsNQoh5EDb81mDfeXDtWmjbBrUsM+jH
PDh+CRw/Dc75ua49duokcMzlcHyQy2s4CXOmQ/smQz2NoHD5ds4RBIGNeyOl9ChPS903GdoVVff/
FomOyAYzgWVC/SAQgwDJa6FMB/Iv1NUzHUijJzov1MsNwofJBtuZcrid+7uFO5bVd5eBUpjM1cn3
w0mdD+rq0I5vzHG853FjqrVPG9Pfcgq0BY6drJL6JZXMUZMxPeYTqei6W8NkneBr0EjOBPpmKBeR
I0m72eDua9gJ/08yUBiTOUumDw8m6c7X2nQ7l1+4iGtDI7RrTob+LId28tbcbp1Bzktp4Pp/EZxf
l+N413HXZ+Uajqy3c+OzilPC0028AgKKFYmOyIgg57Y3cESfDQIZBbK06OJ6zZJfrhNMveLgBdJM
aCfrzic6Qi7TKSItp3BehlBkIbSzgbuu3Tqng6XVQgp+DJaR3BOX+utHob0tXKhEdGMyycBtD4Lb
vgqJjuDdvDm6wgT/jxyhlxhY2eUmrv0qTjB5IjcakF2ra6GB0E7mlEeUs3i13PWNrq3FzkZWdbWJ
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
------MultipartBoundary--r5DuTPbC1r3p1n13RpnaFcsypc1WFyl5cEiZ2HGWFa------
